/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 484.0, "minX": 0.0, "maxY": 5041872.0, "series": [{"data": [[0.0, 589.0], [0.1, 589.0], [0.2, 589.0], [0.3, 589.0], [0.4, 590.0], [0.5, 590.0], [0.6, 590.0], [0.7, 590.0], [0.8, 590.0], [0.9, 590.0], [1.0, 590.0], [1.1, 590.0], [1.2, 590.0], [1.3, 592.0], [1.4, 592.0], [1.5, 592.0], [1.6, 592.0], [1.7, 592.0], [1.8, 592.0], [1.9, 593.0], [2.0, 593.0], [2.1, 593.0], [2.2, 593.0], [2.3, 593.0], [2.4, 593.0], [2.5, 593.0], [2.6, 593.0], [2.7, 593.0], [2.8, 595.0], [2.9, 595.0], [3.0, 595.0], [3.1, 595.0], [3.2, 595.0], [3.3, 595.0], [3.4, 595.0], [3.5, 595.0], [3.6, 595.0], [3.7, 596.0], [3.8, 596.0], [3.9, 596.0], [4.0, 597.0], [4.1, 597.0], [4.2, 597.0], [4.3, 597.0], [4.4, 597.0], [4.5, 597.0], [4.6, 597.0], [4.7, 597.0], [4.8, 597.0], [4.9, 598.0], [5.0, 598.0], [5.1, 598.0], [5.2, 598.0], [5.3, 598.0], [5.4, 598.0], [5.5, 598.0], [5.6, 598.0], [5.7, 598.0], [5.8, 598.0], [5.9, 598.0], [6.0, 598.0], [6.1, 598.0], [6.2, 598.0], [6.3, 598.0], [6.4, 598.0], [6.5, 598.0], [6.6, 598.0], [6.7, 598.0], [6.8, 598.0], [6.9, 598.0], [7.0, 598.0], [7.1, 599.0], [7.2, 599.0], [7.3, 599.0], [7.4, 599.0], [7.5, 599.0], [7.6, 599.0], [7.7, 599.0], [7.8, 599.0], [7.9, 599.0], [8.0, 599.0], [8.1, 599.0], [8.2, 599.0], [8.3, 599.0], [8.4, 599.0], [8.5, 599.0], [8.6, 600.0], [8.7, 600.0], [8.8, 600.0], [8.9, 601.0], [9.0, 601.0], [9.1, 601.0], [9.2, 601.0], [9.3, 601.0], [9.4, 601.0], [9.5, 601.0], [9.6, 601.0], [9.7, 601.0], [9.8, 601.0], [9.9, 601.0], [10.0, 601.0], [10.1, 602.0], [10.2, 602.0], [10.3, 602.0], [10.4, 602.0], [10.5, 602.0], [10.6, 602.0], [10.7, 602.0], [10.8, 602.0], [10.9, 602.0], [11.0, 602.0], [11.1, 602.0], [11.2, 602.0], [11.3, 603.0], [11.4, 603.0], [11.5, 603.0], [11.6, 603.0], [11.7, 603.0], [11.8, 603.0], [11.9, 603.0], [12.0, 603.0], [12.1, 603.0], [12.2, 603.0], [12.3, 603.0], [12.4, 603.0], [12.5, 603.0], [12.6, 603.0], [12.7, 603.0], [12.8, 603.0], [12.9, 603.0], [13.0, 603.0], [13.1, 603.0], [13.2, 604.0], [13.3, 604.0], [13.4, 604.0], [13.5, 604.0], [13.6, 604.0], [13.7, 604.0], [13.8, 604.0], [13.9, 604.0], [14.0, 604.0], [14.1, 604.0], [14.2, 604.0], [14.3, 604.0], [14.4, 604.0], [14.5, 604.0], [14.6, 604.0], [14.7, 604.0], [14.8, 604.0], [14.9, 604.0], [15.0, 605.0], [15.1, 605.0], [15.2, 605.0], [15.3, 605.0], [15.4, 605.0], [15.5, 605.0], [15.6, 605.0], [15.7, 605.0], [15.8, 605.0], [15.9, 605.0], [16.0, 605.0], [16.1, 605.0], [16.2, 606.0], [16.3, 606.0], [16.4, 606.0], [16.5, 606.0], [16.6, 606.0], [16.7, 606.0], [16.8, 606.0], [16.9, 606.0], [17.0, 606.0], [17.1, 606.0], [17.2, 606.0], [17.3, 606.0], [17.4, 606.0], [17.5, 606.0], [17.6, 606.0], [17.7, 606.0], [17.8, 606.0], [17.9, 606.0], [18.0, 607.0], [18.1, 607.0], [18.2, 607.0], [18.3, 607.0], [18.4, 607.0], [18.5, 607.0], [18.6, 607.0], [18.7, 607.0], [18.8, 607.0], [18.9, 607.0], [19.0, 607.0], [19.1, 607.0], [19.2, 607.0], [19.3, 608.0], [19.4, 608.0], [19.5, 608.0], [19.6, 608.0], [19.7, 608.0], [19.8, 608.0], [19.9, 608.0], [20.0, 608.0], [20.1, 608.0], [20.2, 608.0], [20.3, 608.0], [20.4, 608.0], [20.5, 608.0], [20.6, 608.0], [20.7, 608.0], [20.8, 608.0], [20.9, 608.0], [21.0, 608.0], [21.1, 608.0], [21.2, 608.0], [21.3, 608.0], [21.4, 608.0], [21.5, 608.0], [21.6, 608.0], [21.7, 608.0], [21.8, 608.0], [21.9, 608.0], [22.0, 609.0], [22.1, 609.0], [22.2, 609.0], [22.3, 609.0], [22.4, 609.0], [22.5, 609.0], [22.6, 609.0], [22.7, 609.0], [22.8, 609.0], [22.9, 609.0], [23.0, 609.0], [23.1, 609.0], [23.2, 610.0], [23.3, 610.0], [23.4, 610.0], [23.5, 610.0], [23.6, 610.0], [23.7, 610.0], [23.8, 610.0], [23.9, 610.0], [24.0, 610.0], [24.1, 610.0], [24.2, 610.0], [24.3, 610.0], [24.4, 610.0], [24.5, 610.0], [24.6, 610.0], [24.7, 610.0], [24.8, 610.0], [24.9, 610.0], [25.0, 610.0], [25.1, 610.0], [25.2, 610.0], [25.3, 610.0], [25.4, 611.0], [25.5, 611.0], [25.6, 611.0], [25.7, 611.0], [25.8, 611.0], [25.9, 611.0], [26.0, 611.0], [26.1, 611.0], [26.2, 611.0], [26.3, 612.0], [26.4, 612.0], [26.5, 612.0], [26.6, 612.0], [26.7, 612.0], [26.8, 612.0], [26.9, 612.0], [27.0, 612.0], [27.1, 612.0], [27.2, 612.0], [27.3, 612.0], [27.4, 612.0], [27.5, 613.0], [27.6, 613.0], [27.7, 613.0], [27.8, 613.0], [27.9, 613.0], [28.0, 613.0], [28.1, 613.0], [28.2, 613.0], [28.3, 613.0], [28.4, 613.0], [28.5, 613.0], [28.6, 613.0], [28.7, 613.0], [28.8, 613.0], [28.9, 613.0], [29.0, 613.0], [29.1, 613.0], [29.2, 613.0], [29.3, 614.0], [29.4, 614.0], [29.5, 614.0], [29.6, 615.0], [29.7, 615.0], [29.8, 615.0], [29.9, 615.0], [30.0, 615.0], [30.1, 615.0], [30.2, 615.0], [30.3, 615.0], [30.4, 615.0], [30.5, 615.0], [30.6, 615.0], [30.7, 615.0], [30.8, 615.0], [30.9, 615.0], [31.0, 615.0], [31.1, 616.0], [31.2, 616.0], [31.3, 616.0], [31.4, 616.0], [31.5, 616.0], [31.6, 616.0], [31.7, 616.0], [31.8, 616.0], [31.9, 616.0], [32.0, 616.0], [32.1, 616.0], [32.2, 616.0], [32.3, 616.0], [32.4, 616.0], [32.5, 616.0], [32.6, 616.0], [32.7, 616.0], [32.8, 616.0], [32.9, 616.0], [33.0, 616.0], [33.1, 616.0], [33.2, 616.0], [33.3, 617.0], [33.4, 617.0], [33.5, 617.0], [33.6, 617.0], [33.7, 617.0], [33.8, 617.0], [33.9, 617.0], [34.0, 617.0], [34.1, 617.0], [34.2, 617.0], [34.3, 617.0], [34.4, 617.0], [34.5, 617.0], [34.6, 617.0], [34.7, 617.0], [34.8, 617.0], [34.9, 617.0], [35.0, 617.0], [35.1, 617.0], [35.2, 617.0], [35.3, 617.0], [35.4, 618.0], [35.5, 618.0], [35.6, 618.0], [35.7, 618.0], [35.8, 618.0], [35.9, 618.0], [36.0, 618.0], [36.1, 618.0], [36.2, 618.0], [36.3, 619.0], [36.4, 619.0], [36.5, 619.0], [36.6, 619.0], [36.7, 619.0], [36.8, 619.0], [36.9, 619.0], [37.0, 619.0], [37.1, 619.0], [37.2, 620.0], [37.3, 620.0], [37.4, 620.0], [37.5, 621.0], [37.6, 621.0], [37.7, 621.0], [37.8, 621.0], [37.9, 621.0], [38.0, 621.0], [38.1, 621.0], [38.2, 621.0], [38.3, 621.0], [38.4, 621.0], [38.5, 621.0], [38.6, 621.0], [38.7, 621.0], [38.8, 621.0], [38.9, 621.0], [39.0, 621.0], [39.1, 621.0], [39.2, 621.0], [39.3, 621.0], [39.4, 622.0], [39.5, 622.0], [39.6, 622.0], [39.7, 622.0], [39.8, 622.0], [39.9, 622.0], [40.0, 622.0], [40.1, 622.0], [40.2, 622.0], [40.3, 622.0], [40.4, 622.0], [40.5, 622.0], [40.6, 622.0], [40.7, 622.0], [40.8, 622.0], [40.9, 623.0], [41.0, 623.0], [41.1, 623.0], [41.2, 623.0], [41.3, 623.0], [41.4, 623.0], [41.5, 623.0], [41.6, 623.0], [41.7, 623.0], [41.8, 623.0], [41.9, 623.0], [42.0, 623.0], [42.1, 623.0], [42.2, 623.0], [42.3, 623.0], [42.4, 623.0], [42.5, 623.0], [42.6, 623.0], [42.7, 624.0], [42.8, 624.0], [42.9, 624.0], [43.0, 624.0], [43.1, 624.0], [43.2, 624.0], [43.3, 624.0], [43.4, 624.0], [43.5, 624.0], [43.6, 624.0], [43.7, 624.0], [43.8, 624.0], [43.9, 624.0], [44.0, 625.0], [44.1, 625.0], [44.2, 625.0], [44.3, 625.0], [44.4, 625.0], [44.5, 625.0], [44.6, 625.0], [44.7, 625.0], [44.8, 625.0], [44.9, 625.0], [45.0, 625.0], [45.1, 625.0], [45.2, 625.0], [45.3, 625.0], [45.4, 625.0], [45.5, 626.0], [45.6, 626.0], [45.7, 626.0], [45.8, 626.0], [45.9, 626.0], [46.0, 626.0], [46.1, 626.0], [46.2, 626.0], [46.3, 626.0], [46.4, 627.0], [46.5, 627.0], [46.6, 627.0], [46.7, 627.0], [46.8, 627.0], [46.9, 627.0], [47.0, 627.0], [47.1, 627.0], [47.2, 627.0], [47.3, 627.0], [47.4, 627.0], [47.5, 627.0], [47.6, 627.0], [47.7, 627.0], [47.8, 627.0], [47.9, 627.0], [48.0, 627.0], [48.1, 627.0], [48.2, 628.0], [48.3, 628.0], [48.4, 628.0], [48.5, 628.0], [48.6, 628.0], [48.7, 628.0], [48.8, 629.0], [48.9, 629.0], [49.0, 629.0], [49.1, 629.0], [49.2, 629.0], [49.3, 629.0], [49.4, 629.0], [49.5, 629.0], [49.6, 629.0], [49.7, 629.0], [49.8, 629.0], [49.9, 629.0], [50.0, 630.0], [50.1, 630.0], [50.2, 630.0], [50.3, 630.0], [50.4, 630.0], [50.5, 630.0], [50.6, 630.0], [50.7, 630.0], [50.8, 630.0], [50.9, 630.0], [51.0, 631.0], [51.1, 631.0], [51.2, 631.0], [51.3, 631.0], [51.4, 631.0], [51.5, 631.0], [51.6, 631.0], [51.7, 631.0], [51.8, 631.0], [51.9, 631.0], [52.0, 631.0], [52.1, 631.0], [52.2, 631.0], [52.3, 631.0], [52.4, 631.0], [52.5, 631.0], [52.6, 631.0], [52.7, 631.0], [52.8, 632.0], [52.9, 632.0], [53.0, 632.0], [53.1, 632.0], [53.2, 632.0], [53.3, 632.0], [53.4, 632.0], [53.5, 632.0], [53.6, 632.0], [53.7, 633.0], [53.8, 633.0], [53.9, 633.0], [54.0, 633.0], [54.1, 633.0], [54.2, 633.0], [54.3, 634.0], [54.4, 634.0], [54.5, 634.0], [54.6, 636.0], [54.7, 636.0], [54.8, 636.0], [54.9, 637.0], [55.0, 637.0], [55.1, 637.0], [55.2, 638.0], [55.3, 638.0], [55.4, 638.0], [55.5, 638.0], [55.6, 638.0], [55.7, 638.0], [55.8, 638.0], [55.9, 638.0], [56.0, 638.0], [56.1, 639.0], [56.2, 639.0], [56.3, 639.0], [56.4, 639.0], [56.5, 640.0], [56.6, 640.0], [56.7, 640.0], [56.8, 641.0], [56.9, 641.0], [57.0, 641.0], [57.1, 642.0], [57.2, 642.0], [57.3, 642.0], [57.4, 643.0], [57.5, 643.0], [57.6, 643.0], [57.7, 643.0], [57.8, 643.0], [57.9, 643.0], [58.0, 645.0], [58.1, 645.0], [58.2, 645.0], [58.3, 646.0], [58.4, 646.0], [58.5, 646.0], [58.6, 646.0], [58.7, 646.0], [58.8, 646.0], [58.9, 646.0], [59.0, 646.0], [59.1, 646.0], [59.2, 646.0], [59.3, 646.0], [59.4, 646.0], [59.5, 647.0], [59.6, 647.0], [59.7, 647.0], [59.8, 649.0], [59.9, 649.0], [60.0, 649.0], [60.1, 650.0], [60.2, 650.0], [60.3, 650.0], [60.4, 651.0], [60.5, 651.0], [60.6, 651.0], [60.7, 651.0], [60.8, 651.0], [60.9, 651.0], [61.0, 652.0], [61.1, 652.0], [61.2, 652.0], [61.3, 652.0], [61.4, 652.0], [61.5, 652.0], [61.6, 652.0], [61.7, 652.0], [61.8, 652.0], [61.9, 653.0], [62.0, 653.0], [62.1, 653.0], [62.2, 653.0], [62.3, 653.0], [62.4, 653.0], [62.5, 654.0], [62.6, 654.0], [62.7, 654.0], [62.8, 654.0], [62.9, 655.0], [63.0, 655.0], [63.1, 655.0], [63.2, 655.0], [63.3, 655.0], [63.4, 655.0], [63.5, 656.0], [63.6, 656.0], [63.7, 656.0], [63.8, 656.0], [63.9, 656.0], [64.0, 656.0], [64.1, 657.0], [64.2, 657.0], [64.3, 657.0], [64.4, 659.0], [64.5, 659.0], [64.6, 659.0], [64.7, 659.0], [64.8, 659.0], [64.9, 659.0], [65.0, 659.0], [65.1, 659.0], [65.2, 659.0], [65.3, 661.0], [65.4, 661.0], [65.5, 661.0], [65.6, 661.0], [65.7, 661.0], [65.8, 661.0], [65.9, 663.0], [66.0, 663.0], [66.1, 663.0], [66.2, 664.0], [66.3, 664.0], [66.4, 664.0], [66.5, 669.0], [66.6, 669.0], [66.7, 669.0], [66.8, 670.0], [66.9, 670.0], [67.0, 670.0], [67.1, 673.0], [67.2, 673.0], [67.3, 673.0], [67.4, 676.0], [67.5, 676.0], [67.6, 676.0], [67.7, 678.0], [67.8, 678.0], [67.9, 678.0], [68.0, 678.0], [68.1, 678.0], [68.2, 678.0], [68.3, 682.0], [68.4, 682.0], [68.5, 682.0], [68.6, 685.0], [68.7, 685.0], [68.8, 685.0], [68.9, 685.0], [69.0, 687.0], [69.1, 687.0], [69.2, 687.0], [69.3, 687.0], [69.4, 687.0], [69.5, 687.0], [69.6, 690.0], [69.7, 690.0], [69.8, 690.0], [69.9, 690.0], [70.0, 690.0], [70.1, 690.0], [70.2, 695.0], [70.3, 695.0], [70.4, 695.0], [70.5, 696.0], [70.6, 696.0], [70.7, 696.0], [70.8, 699.0], [70.9, 699.0], [71.0, 699.0], [71.1, 701.0], [71.2, 701.0], [71.3, 701.0], [71.4, 713.0], [71.5, 713.0], [71.6, 713.0], [71.7, 717.0], [71.8, 717.0], [71.9, 717.0], [72.0, 719.0], [72.1, 719.0], [72.2, 719.0], [72.3, 722.0], [72.4, 722.0], [72.5, 722.0], [72.6, 730.0], [72.7, 730.0], [72.8, 730.0], [72.9, 737.0], [73.0, 737.0], [73.1, 737.0], [73.2, 770.0], [73.3, 770.0], [73.4, 770.0], [73.5, 772.0], [73.6, 772.0], [73.7, 772.0], [73.8, 774.0], [73.9, 774.0], [74.0, 774.0], [74.1, 780.0], [74.2, 780.0], [74.3, 780.0], [74.4, 782.0], [74.5, 782.0], [74.6, 782.0], [74.7, 809.0], [74.8, 809.0], [74.9, 809.0], [75.0, 809.0], [75.1, 811.0], [75.2, 811.0], [75.3, 811.0], [75.4, 812.0], [75.5, 812.0], [75.6, 812.0], [75.7, 851.0], [75.8, 851.0], [75.9, 851.0], [76.0, 865.0], [76.1, 865.0], [76.2, 865.0], [76.3, 915.0], [76.4, 915.0], [76.5, 915.0], [76.6, 949.0], [76.7, 949.0], [76.8, 949.0], [76.9, 976.0], [77.0, 976.0], [77.1, 976.0], [77.2, 983.0], [77.3, 983.0], [77.4, 983.0], [77.5, 990.0], [77.6, 990.0], [77.7, 990.0], [77.8, 1000.0], [77.9, 1000.0], [78.0, 1000.0], [78.1, 1000.0], [78.2, 1000.0], [78.3, 1000.0], [78.4, 1001.0], [78.5, 1001.0], [78.6, 1001.0], [78.7, 1002.0], [78.8, 1002.0], [78.9, 1002.0], [79.0, 1003.0], [79.1, 1003.0], [79.2, 1003.0], [79.3, 1004.0], [79.4, 1004.0], [79.5, 1004.0], [79.6, 1005.0], [79.7, 1005.0], [79.8, 1005.0], [79.9, 1005.0], [80.0, 1005.0], [80.1, 1005.0], [80.2, 1010.0], [80.3, 1010.0], [80.4, 1010.0], [80.5, 1015.0], [80.6, 1015.0], [80.7, 1015.0], [80.8, 1016.0], [80.9, 1016.0], [81.0, 1016.0], [81.1, 1017.0], [81.2, 1017.0], [81.3, 1017.0], [81.4, 1017.0], [81.5, 1017.0], [81.6, 1017.0], [81.7, 1017.0], [81.8, 1021.0], [81.9, 1021.0], [82.0, 1021.0], [82.1, 1022.0], [82.2, 1022.0], [82.3, 1022.0], [82.4, 1027.0], [82.5, 1027.0], [82.6, 1027.0], [82.7, 1028.0], [82.8, 1028.0], [82.9, 1028.0], [83.0, 1043.0], [83.1, 1043.0], [83.2, 1043.0], [83.3, 1053.0], [83.4, 1053.0], [83.5, 1053.0], [83.6, 1065.0], [83.7, 1065.0], [83.8, 1065.0], [83.9, 1066.0], [84.0, 1066.0], [84.1, 1066.0], [84.2, 1089.0], [84.3, 1089.0], [84.4, 1089.0], [84.5, 1089.0], [84.6, 1089.0], [84.7, 1089.0], [84.8, 1120.0], [84.9, 1120.0], [85.0, 1120.0], [85.1, 1141.0], [85.2, 1141.0], [85.3, 1141.0], [85.4, 1142.0], [85.5, 1142.0], [85.6, 1142.0], [85.7, 1143.0], [85.8, 1143.0], [85.9, 1143.0], [86.0, 1144.0], [86.1, 1144.0], [86.2, 1144.0], [86.3, 1146.0], [86.4, 1146.0], [86.5, 1146.0], [86.6, 1153.0], [86.7, 1153.0], [86.8, 1153.0], [86.9, 1158.0], [87.0, 1158.0], [87.1, 1158.0], [87.2, 1160.0], [87.3, 1160.0], [87.4, 1160.0], [87.5, 1160.0], [87.6, 1170.0], [87.7, 1170.0], [87.8, 1170.0], [87.9, 1173.0], [88.0, 1173.0], [88.1, 1173.0], [88.2, 1181.0], [88.3, 1181.0], [88.4, 1181.0], [88.5, 1184.0], [88.6, 1184.0], [88.7, 1184.0], [88.8, 1187.0], [88.9, 1187.0], [89.0, 1187.0], [89.1, 1214.0], [89.2, 1214.0], [89.3, 1214.0], [89.4, 1215.0], [89.5, 1215.0], [89.6, 1215.0], [89.7, 1226.0], [89.8, 1226.0], [89.9, 1226.0], [90.0, 1333.0], [90.1, 1333.0], [90.2, 1333.0], [90.3, 1382.0], [90.4, 1382.0], [90.5, 1382.0], [90.6, 1532.0], [90.7, 1532.0], [90.8, 1532.0], [90.9, 1533.0], [91.0, 1533.0], [91.1, 1533.0], [91.2, 1552.0], [91.3, 1552.0], [91.4, 1552.0], [91.5, 1569.0], [91.6, 1569.0], [91.7, 1569.0], [91.8, 1589.0], [91.9, 1589.0], [92.0, 1589.0], [92.1, 1606.0], [92.2, 1606.0], [92.3, 1606.0], [92.4, 1842.0], [92.5, 1842.0], [92.6, 1842.0], [92.7, 489636.0], [92.8, 489636.0], [92.9, 489636.0], [93.0, 528719.0], [93.1, 528719.0], [93.2, 528719.0], [93.3, 536457.0], [93.4, 536457.0], [93.5, 536457.0], [93.6, 536883.0], [93.7, 536883.0], [93.8, 536883.0], [93.9, 536883.0], [94.0, 576531.0], [94.1, 576531.0], [94.2, 576531.0], [94.3, 593483.0], [94.4, 593483.0], [94.5, 593483.0], [94.6, 625323.0], [94.7, 625323.0], [94.8, 625323.0], [94.9, 4464973.0], [95.0, 4464973.0], [95.1, 4464973.0], [95.2, 4488125.0], [95.3, 4488125.0], [95.4, 4488125.0], [95.5, 4495930.0], [95.6, 4495930.0], [95.7, 4495930.0], [95.8, 4560513.0], [95.9, 4560513.0], [96.0, 4560513.0], [96.1, 5040700.0], [96.2, 5040700.0], [96.3, 5040700.0], [96.4, 5040903.0], [96.5, 5040903.0], [96.6, 5040903.0], [96.7, 5040991.0], [96.8, 5040991.0], [96.9, 5040991.0], [97.0, 5041040.0], [97.1, 5041040.0], [97.2, 5041040.0], [97.3, 5041088.0], [97.4, 5041088.0], [97.5, 5041088.0], [97.6, 5041092.0], [97.7, 5041092.0], [97.8, 5041092.0], [97.9, 5041099.0], [98.0, 5041099.0], [98.1, 5041099.0], [98.2, 5041207.0], [98.3, 5041207.0], [98.4, 5041207.0], [98.5, 5041306.0], [98.6, 5041306.0], [98.7, 5041306.0], [98.8, 5041348.0], [98.9, 5041348.0], [99.0, 5041348.0], [99.1, 5041556.0], [99.2, 5041556.0], [99.3, 5041556.0], [99.4, 5041861.0], [99.5, 5041861.0], [99.6, 5041861.0], [99.7, 5041872.0], [99.8, 5041872.0], [99.9, 5041872.0], [100.0, 5041872.0]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[0.0, 484.0], [0.1, 484.0], [0.2, 484.0], [0.3, 484.0], [0.4, 484.0], [0.5, 484.0], [0.6, 484.0], [0.7, 484.0], [0.8, 485.0], [0.9, 485.0], [1.0, 485.0], [1.1, 485.0], [1.2, 485.0], [1.3, 485.0], [1.4, 485.0], [1.5, 486.0], [1.6, 486.0], [1.7, 486.0], [1.8, 487.0], [1.9, 487.0], [2.0, 487.0], [2.1, 487.0], [2.2, 487.0], [2.3, 487.0], [2.4, 487.0], [2.5, 489.0], [2.6, 489.0], [2.7, 489.0], [2.8, 489.0], [2.9, 490.0], [3.0, 490.0], [3.1, 490.0], [3.2, 490.0], [3.3, 490.0], [3.4, 490.0], [3.5, 490.0], [3.6, 490.0], [3.7, 490.0], [3.8, 490.0], [3.9, 490.0], [4.0, 490.0], [4.1, 490.0], [4.2, 490.0], [4.3, 491.0], [4.4, 491.0], [4.5, 491.0], [4.6, 491.0], [4.7, 491.0], [4.8, 491.0], [4.9, 491.0], [5.0, 492.0], [5.1, 492.0], [5.2, 492.0], [5.3, 492.0], [5.4, 492.0], [5.5, 492.0], [5.6, 492.0], [5.7, 493.0], [5.8, 493.0], [5.9, 493.0], [6.0, 494.0], [6.1, 494.0], [6.2, 494.0], [6.3, 494.0], [6.4, 494.0], [6.5, 494.0], [6.6, 494.0], [6.7, 494.0], [6.8, 494.0], [6.9, 494.0], [7.0, 494.0], [7.1, 494.0], [7.2, 494.0], [7.3, 494.0], [7.4, 494.0], [7.5, 494.0], [7.6, 494.0], [7.7, 494.0], [7.8, 494.0], [7.9, 494.0], [8.0, 494.0], [8.1, 494.0], [8.2, 494.0], [8.3, 494.0], [8.4, 494.0], [8.5, 494.0], [8.6, 494.0], [8.7, 494.0], [8.8, 495.0], [8.9, 495.0], [9.0, 495.0], [9.1, 495.0], [9.2, 495.0], [9.3, 495.0], [9.4, 495.0], [9.5, 495.0], [9.6, 495.0], [9.7, 495.0], [9.8, 495.0], [9.9, 495.0], [10.0, 495.0], [10.1, 495.0], [10.2, 495.0], [10.3, 495.0], [10.4, 495.0], [10.5, 495.0], [10.6, 495.0], [10.7, 495.0], [10.8, 495.0], [10.9, 496.0], [11.0, 496.0], [11.1, 496.0], [11.2, 496.0], [11.3, 496.0], [11.4, 496.0], [11.5, 496.0], [11.6, 496.0], [11.7, 496.0], [11.8, 496.0], [11.9, 496.0], [12.0, 496.0], [12.1, 496.0], [12.2, 496.0], [12.3, 496.0], [12.4, 496.0], [12.5, 496.0], [12.6, 496.0], [12.7, 496.0], [12.8, 496.0], [12.9, 496.0], [13.0, 496.0], [13.1, 496.0], [13.2, 496.0], [13.3, 496.0], [13.4, 496.0], [13.5, 496.0], [13.6, 496.0], [13.7, 496.0], [13.8, 496.0], [13.9, 496.0], [14.0, 496.0], [14.1, 497.0], [14.2, 497.0], [14.3, 497.0], [14.4, 497.0], [14.5, 497.0], [14.6, 497.0], [14.7, 497.0], [14.8, 497.0], [14.9, 497.0], [15.0, 497.0], [15.1, 497.0], [15.2, 497.0], [15.3, 497.0], [15.4, 497.0], [15.5, 497.0], [15.6, 497.0], [15.7, 497.0], [15.8, 497.0], [15.9, 497.0], [16.0, 497.0], [16.1, 497.0], [16.2, 498.0], [16.3, 498.0], [16.4, 498.0], [16.5, 498.0], [16.6, 498.0], [16.7, 498.0], [16.8, 498.0], [16.9, 498.0], [17.0, 498.0], [17.1, 498.0], [17.2, 499.0], [17.3, 499.0], [17.4, 499.0], [17.5, 499.0], [17.6, 499.0], [17.7, 499.0], [17.8, 499.0], [17.9, 499.0], [18.0, 499.0], [18.1, 499.0], [18.2, 499.0], [18.3, 499.0], [18.4, 499.0], [18.5, 499.0], [18.6, 499.0], [18.7, 499.0], [18.8, 499.0], [18.9, 499.0], [19.0, 499.0], [19.1, 499.0], [19.2, 499.0], [19.3, 500.0], [19.4, 500.0], [19.5, 500.0], [19.6, 500.0], [19.7, 500.0], [19.8, 500.0], [19.9, 500.0], [20.0, 500.0], [20.1, 500.0], [20.2, 500.0], [20.3, 500.0], [20.4, 500.0], [20.5, 500.0], [20.6, 500.0], [20.7, 500.0], [20.8, 500.0], [20.9, 500.0], [21.0, 500.0], [21.1, 501.0], [21.2, 501.0], [21.3, 501.0], [21.4, 501.0], [21.5, 501.0], [21.6, 501.0], [21.7, 501.0], [21.8, 501.0], [21.9, 501.0], [22.0, 501.0], [22.1, 501.0], [22.2, 501.0], [22.3, 501.0], [22.4, 501.0], [22.5, 502.0], [22.6, 502.0], [22.7, 502.0], [22.8, 502.0], [22.9, 502.0], [23.0, 502.0], [23.1, 502.0], [23.2, 502.0], [23.3, 502.0], [23.4, 502.0], [23.5, 502.0], [23.6, 502.0], [23.7, 502.0], [23.8, 502.0], [23.9, 503.0], [24.0, 503.0], [24.1, 503.0], [24.2, 503.0], [24.3, 503.0], [24.4, 503.0], [24.5, 503.0], [24.6, 503.0], [24.7, 503.0], [24.8, 503.0], [24.9, 503.0], [25.0, 503.0], [25.1, 503.0], [25.2, 503.0], [25.3, 503.0], [25.4, 503.0], [25.5, 503.0], [25.6, 503.0], [25.7, 504.0], [25.8, 504.0], [25.9, 504.0], [26.0, 504.0], [26.1, 504.0], [26.2, 504.0], [26.3, 504.0], [26.4, 504.0], [26.5, 504.0], [26.6, 504.0], [26.7, 504.0], [26.8, 504.0], [26.9, 504.0], [27.0, 504.0], [27.1, 504.0], [27.2, 504.0], [27.3, 504.0], [27.4, 504.0], [27.5, 504.0], [27.6, 504.0], [27.7, 504.0], [27.8, 504.0], [27.9, 504.0], [28.0, 504.0], [28.1, 504.0], [28.2, 504.0], [28.3, 504.0], [28.4, 504.0], [28.5, 504.0], [28.6, 504.0], [28.7, 504.0], [28.8, 505.0], [28.9, 505.0], [29.0, 505.0], [29.1, 505.0], [29.2, 505.0], [29.3, 505.0], [29.4, 505.0], [29.5, 505.0], [29.6, 505.0], [29.7, 505.0], [29.8, 505.0], [29.9, 505.0], [30.0, 505.0], [30.1, 505.0], [30.2, 505.0], [30.3, 505.0], [30.4, 505.0], [30.5, 505.0], [30.6, 505.0], [30.7, 505.0], [30.8, 505.0], [30.9, 506.0], [31.0, 506.0], [31.1, 506.0], [31.2, 506.0], [31.3, 506.0], [31.4, 506.0], [31.5, 506.0], [31.6, 506.0], [31.7, 506.0], [31.8, 506.0], [31.9, 506.0], [32.0, 506.0], [32.1, 506.0], [32.2, 506.0], [32.3, 506.0], [32.4, 506.0], [32.5, 506.0], [32.6, 506.0], [32.7, 506.0], [32.8, 506.0], [32.9, 506.0], [33.0, 506.0], [33.1, 506.0], [33.2, 506.0], [33.3, 506.0], [33.4, 507.0], [33.5, 507.0], [33.6, 507.0], [33.7, 507.0], [33.8, 507.0], [33.9, 507.0], [34.0, 507.0], [34.1, 507.0], [34.2, 507.0], [34.3, 507.0], [34.4, 507.0], [34.5, 507.0], [34.6, 507.0], [34.7, 507.0], [34.8, 507.0], [34.9, 507.0], [35.0, 507.0], [35.1, 507.0], [35.2, 507.0], [35.3, 507.0], [35.4, 507.0], [35.5, 507.0], [35.6, 507.0], [35.7, 507.0], [35.8, 508.0], [35.9, 508.0], [36.0, 508.0], [36.1, 508.0], [36.2, 508.0], [36.3, 508.0], [36.4, 508.0], [36.5, 508.0], [36.6, 508.0], [36.7, 508.0], [36.8, 508.0], [36.9, 508.0], [37.0, 508.0], [37.1, 508.0], [37.2, 508.0], [37.3, 508.0], [37.4, 508.0], [37.5, 508.0], [37.6, 508.0], [37.7, 508.0], [37.8, 508.0], [37.9, 509.0], [38.0, 509.0], [38.1, 509.0], [38.2, 509.0], [38.3, 509.0], [38.4, 509.0], [38.5, 509.0], [38.6, 510.0], [38.7, 510.0], [38.8, 510.0], [38.9, 510.0], [39.0, 510.0], [39.1, 510.0], [39.2, 510.0], [39.3, 510.0], [39.4, 510.0], [39.5, 510.0], [39.6, 510.0], [39.7, 510.0], [39.8, 510.0], [39.9, 510.0], [40.0, 511.0], [40.1, 511.0], [40.2, 511.0], [40.3, 511.0], [40.4, 511.0], [40.5, 511.0], [40.6, 511.0], [40.7, 511.0], [40.8, 511.0], [40.9, 511.0], [41.0, 511.0], [41.1, 512.0], [41.2, 512.0], [41.3, 512.0], [41.4, 512.0], [41.5, 512.0], [41.6, 512.0], [41.7, 512.0], [41.8, 512.0], [41.9, 512.0], [42.0, 512.0], [42.1, 512.0], [42.2, 512.0], [42.3, 512.0], [42.4, 512.0], [42.5, 512.0], [42.6, 512.0], [42.7, 512.0], [42.8, 512.0], [42.9, 512.0], [43.0, 512.0], [43.1, 512.0], [43.2, 513.0], [43.3, 513.0], [43.4, 513.0], [43.5, 513.0], [43.6, 513.0], [43.7, 513.0], [43.8, 513.0], [43.9, 513.0], [44.0, 513.0], [44.1, 513.0], [44.2, 513.0], [44.3, 513.0], [44.4, 513.0], [44.5, 513.0], [44.6, 513.0], [44.7, 513.0], [44.8, 513.0], [44.9, 513.0], [45.0, 513.0], [45.1, 513.0], [45.2, 513.0], [45.3, 513.0], [45.4, 513.0], [45.5, 513.0], [45.6, 513.0], [45.7, 514.0], [45.8, 514.0], [45.9, 514.0], [46.0, 514.0], [46.1, 514.0], [46.2, 514.0], [46.3, 514.0], [46.4, 514.0], [46.5, 514.0], [46.6, 514.0], [46.7, 515.0], [46.8, 515.0], [46.9, 515.0], [47.0, 515.0], [47.1, 515.0], [47.2, 515.0], [47.3, 515.0], [47.4, 515.0], [47.5, 515.0], [47.6, 515.0], [47.7, 515.0], [47.8, 516.0], [47.9, 516.0], [48.0, 516.0], [48.1, 516.0], [48.2, 516.0], [48.3, 516.0], [48.4, 516.0], [48.5, 516.0], [48.6, 516.0], [48.7, 516.0], [48.8, 516.0], [48.9, 516.0], [49.0, 516.0], [49.1, 516.0], [49.2, 517.0], [49.3, 517.0], [49.4, 517.0], [49.5, 517.0], [49.6, 517.0], [49.7, 517.0], [49.8, 517.0], [49.9, 518.0], [50.0, 518.0], [50.1, 518.0], [50.2, 518.0], [50.3, 518.0], [50.4, 518.0], [50.5, 518.0], [50.6, 518.0], [50.7, 518.0], [50.8, 518.0], [50.9, 518.0], [51.0, 518.0], [51.1, 518.0], [51.2, 518.0], [51.3, 518.0], [51.4, 518.0], [51.5, 518.0], [51.6, 519.0], [51.7, 519.0], [51.8, 519.0], [51.9, 519.0], [52.0, 519.0], [52.1, 519.0], [52.2, 519.0], [52.3, 520.0], [52.4, 520.0], [52.5, 520.0], [52.6, 520.0], [52.7, 521.0], [52.8, 521.0], [52.9, 521.0], [53.0, 522.0], [53.1, 522.0], [53.2, 522.0], [53.3, 522.0], [53.4, 523.0], [53.5, 523.0], [53.6, 523.0], [53.7, 523.0], [53.8, 523.0], [53.9, 523.0], [54.0, 523.0], [54.1, 523.0], [54.2, 523.0], [54.3, 523.0], [54.4, 523.0], [54.5, 523.0], [54.6, 523.0], [54.7, 523.0], [54.8, 524.0], [54.9, 524.0], [55.0, 524.0], [55.1, 526.0], [55.2, 526.0], [55.3, 526.0], [55.4, 526.0], [55.5, 526.0], [55.6, 526.0], [55.7, 526.0], [55.8, 527.0], [55.9, 527.0], [56.0, 527.0], [56.1, 527.0], [56.2, 527.0], [56.3, 527.0], [56.4, 527.0], [56.5, 531.0], [56.6, 531.0], [56.7, 531.0], [56.8, 531.0], [56.9, 532.0], [57.0, 532.0], [57.1, 532.0], [57.2, 532.0], [57.3, 532.0], [57.4, 532.0], [57.5, 532.0], [57.6, 534.0], [57.7, 534.0], [57.8, 534.0], [57.9, 536.0], [58.0, 536.0], [58.1, 536.0], [58.2, 536.0], [58.3, 536.0], [58.4, 536.0], [58.5, 536.0], [58.6, 538.0], [58.7, 538.0], [58.8, 538.0], [58.9, 538.0], [59.0, 539.0], [59.1, 539.0], [59.2, 539.0], [59.3, 540.0], [59.4, 540.0], [59.5, 540.0], [59.6, 540.0], [59.7, 541.0], [59.8, 541.0], [59.9, 541.0], [60.0, 541.0], [60.1, 541.0], [60.2, 541.0], [60.3, 541.0], [60.4, 541.0], [60.5, 541.0], [60.6, 541.0], [60.7, 541.0], [60.8, 542.0], [60.9, 542.0], [61.0, 542.0], [61.1, 545.0], [61.2, 545.0], [61.3, 545.0], [61.4, 545.0], [61.5, 546.0], [61.6, 546.0], [61.7, 546.0], [61.8, 548.0], [61.9, 548.0], [62.0, 548.0], [62.1, 548.0], [62.2, 551.0], [62.3, 551.0], [62.4, 551.0], [62.5, 557.0], [62.6, 557.0], [62.7, 557.0], [62.8, 557.0], [62.9, 557.0], [63.0, 557.0], [63.1, 557.0], [63.2, 558.0], [63.3, 558.0], [63.4, 558.0], [63.5, 558.0], [63.6, 559.0], [63.7, 559.0], [63.8, 559.0], [63.9, 561.0], [64.0, 561.0], [64.1, 561.0], [64.2, 561.0], [64.3, 563.0], [64.4, 563.0], [64.5, 563.0], [64.6, 563.0], [64.7, 563.0], [64.8, 563.0], [64.9, 563.0], [65.0, 565.0], [65.1, 565.0], [65.2, 565.0], [65.3, 565.0], [65.4, 565.0], [65.5, 565.0], [65.6, 565.0], [65.7, 583.0], [65.8, 583.0], [65.9, 583.0], [66.0, 592.0], [66.1, 592.0], [66.2, 592.0], [66.3, 592.0], [66.4, 594.0], [66.5, 594.0], [66.6, 594.0], [66.7, 597.0], [66.8, 597.0], [66.9, 597.0], [67.0, 597.0], [67.1, 648.0], [67.2, 648.0], [67.3, 648.0], [67.4, 649.0], [67.5, 649.0], [67.6, 649.0], [67.7, 649.0], [67.8, 657.0], [67.9, 657.0], [68.0, 657.0], [68.1, 661.0], [68.2, 661.0], [68.3, 661.0], [68.4, 661.0], [68.5, 676.0], [68.6, 676.0], [68.7, 676.0], [68.8, 690.0], [68.9, 690.0], [69.0, 690.0], [69.1, 690.0], [69.2, 696.0], [69.3, 696.0], [69.4, 696.0], [69.5, 697.0], [69.6, 697.0], [69.7, 697.0], [69.8, 697.0], [69.9, 718.0], [70.0, 718.0], [70.1, 718.0], [70.2, 724.0], [70.3, 724.0], [70.4, 724.0], [70.5, 724.0], [70.6, 734.0], [70.7, 734.0], [70.8, 734.0], [70.9, 739.0], [71.0, 739.0], [71.1, 739.0], [71.2, 739.0], [71.3, 747.0], [71.4, 747.0], [71.5, 747.0], [71.6, 766.0], [71.7, 766.0], [71.8, 766.0], [71.9, 766.0], [72.0, 778.0], [72.1, 778.0], [72.2, 778.0], [72.3, 787.0], [72.4, 787.0], [72.5, 787.0], [72.6, 787.0], [72.7, 792.0], [72.8, 792.0], [72.9, 792.0], [73.0, 794.0], [73.1, 794.0], [73.2, 794.0], [73.3, 794.0], [73.4, 809.0], [73.5, 809.0], [73.6, 809.0], [73.7, 814.0], [73.8, 814.0], [73.9, 814.0], [74.0, 814.0], [74.1, 827.0], [74.2, 827.0], [74.3, 827.0], [74.4, 833.0], [74.5, 833.0], [74.6, 833.0], [74.7, 833.0], [74.8, 880.0], [74.9, 880.0], [75.0, 880.0], [75.1, 895.0], [75.2, 895.0], [75.3, 895.0], [75.4, 895.0], [75.5, 917.0], [75.6, 917.0], [75.7, 917.0], [75.8, 962.0], [75.9, 962.0], [76.0, 962.0], [76.1, 962.0], [76.2, 1015.0], [76.3, 1015.0], [76.4, 1015.0], [76.5, 1019.0], [76.6, 1019.0], [76.7, 1019.0], [76.8, 1019.0], [76.9, 1021.0], [77.0, 1021.0], [77.1, 1021.0], [77.2, 1022.0], [77.3, 1022.0], [77.4, 1022.0], [77.5, 1022.0], [77.6, 1023.0], [77.7, 1023.0], [77.8, 1023.0], [77.9, 1024.0], [78.0, 1024.0], [78.1, 1024.0], [78.2, 1024.0], [78.3, 1024.0], [78.4, 1024.0], [78.5, 1024.0], [78.6, 1024.0], [78.7, 1024.0], [78.8, 1024.0], [78.9, 1024.0], [79.0, 1024.0], [79.1, 1024.0], [79.2, 1024.0], [79.3, 1025.0], [79.4, 1025.0], [79.5, 1025.0], [79.6, 1025.0], [79.7, 1029.0], [79.8, 1029.0], [79.9, 1029.0], [80.0, 1030.0], [80.1, 1030.0], [80.2, 1030.0], [80.3, 1030.0], [80.4, 1031.0], [80.5, 1031.0], [80.6, 1031.0], [80.7, 1031.0], [80.8, 1032.0], [80.9, 1032.0], [81.0, 1032.0], [81.1, 1034.0], [81.2, 1034.0], [81.3, 1034.0], [81.4, 1034.0], [81.5, 1037.0], [81.6, 1037.0], [81.7, 1037.0], [81.8, 1038.0], [81.9, 1038.0], [82.0, 1038.0], [82.1, 1038.0], [82.2, 1041.0], [82.3, 1041.0], [82.4, 1041.0], [82.5, 1041.0], [82.6, 1041.0], [82.7, 1041.0], [82.8, 1041.0], [82.9, 1043.0], [83.0, 1043.0], [83.1, 1043.0], [83.2, 1044.0], [83.3, 1044.0], [83.4, 1044.0], [83.5, 1044.0], [83.6, 1044.0], [83.7, 1044.0], [83.8, 1044.0], [83.9, 1045.0], [84.0, 1045.0], [84.1, 1045.0], [84.2, 1045.0], [84.3, 1045.0], [84.4, 1045.0], [84.5, 1045.0], [84.6, 1045.0], [84.7, 1045.0], [84.8, 1045.0], [84.9, 1045.0], [85.0, 1046.0], [85.1, 1046.0], [85.2, 1046.0], [85.3, 1047.0], [85.4, 1047.0], [85.5, 1047.0], [85.6, 1047.0], [85.7, 1049.0], [85.8, 1049.0], [85.9, 1049.0], [86.0, 1049.0], [86.1, 1049.0], [86.2, 1049.0], [86.3, 1049.0], [86.4, 1049.0], [86.5, 1049.0], [86.6, 1049.0], [86.7, 1050.0], [86.8, 1050.0], [86.9, 1050.0], [87.0, 1050.0], [87.1, 1052.0], [87.2, 1052.0], [87.3, 1052.0], [87.4, 1055.0], [87.5, 1055.0], [87.6, 1055.0], [87.7, 1055.0], [87.8, 1057.0], [87.9, 1057.0], [88.0, 1057.0], [88.1, 1063.0], [88.2, 1063.0], [88.3, 1063.0], [88.4, 1063.0], [88.5, 1063.0], [88.6, 1063.0], [88.7, 1063.0], [88.8, 1068.0], [88.9, 1068.0], [89.0, 1068.0], [89.1, 1068.0], [89.2, 1071.0], [89.3, 1071.0], [89.4, 1071.0], [89.5, 1078.0], [89.6, 1078.0], [89.7, 1078.0], [89.8, 1078.0], [89.9, 1086.0], [90.0, 1086.0], [90.1, 1086.0], [90.2, 1087.0], [90.3, 1087.0], [90.4, 1087.0], [90.5, 1087.0], [90.6, 1088.0], [90.7, 1088.0], [90.8, 1088.0], [90.9, 1093.0], [91.0, 1093.0], [91.1, 1093.0], [91.2, 1093.0], [91.3, 1101.0], [91.4, 1101.0], [91.5, 1101.0], [91.6, 1102.0], [91.7, 1102.0], [91.8, 1102.0], [91.9, 1102.0], [92.0, 480350.0], [92.1, 480350.0], [92.2, 480350.0], [92.3, 544487.0], [92.4, 544487.0], [92.5, 544487.0], [92.6, 544487.0], [92.7, 553119.0], [92.8, 553119.0], [92.9, 553119.0], [93.0, 553132.0], [93.1, 553132.0], [93.2, 553132.0], [93.3, 553132.0], [93.4, 576365.0], [93.5, 576365.0], [93.6, 576365.0], [93.7, 577021.0], [93.8, 577021.0], [93.9, 577021.0], [94.0, 577021.0], [94.1, 585471.0], [94.2, 585471.0], [94.3, 585471.0], [94.4, 585708.0], [94.5, 585708.0], [94.6, 585708.0], [94.7, 585708.0], [94.8, 4463608.0], [94.9, 4463608.0], [95.0, 4463608.0], [95.1, 5040903.0], [95.2, 5040903.0], [95.3, 5040903.0], [95.4, 5040903.0], [95.5, 5040930.0], [95.6, 5040930.0], [95.7, 5040930.0], [95.8, 5041058.0], [95.9, 5041058.0], [96.0, 5041058.0], [96.1, 5041058.0], [96.2, 5041108.0], [96.3, 5041108.0], [96.4, 5041108.0], [96.5, 5041122.0], [96.6, 5041122.0], [96.7, 5041122.0], [96.8, 5041122.0], [96.9, 5041162.0], [97.0, 5041162.0], [97.1, 5041162.0], [97.2, 5041185.0], [97.3, 5041185.0], [97.4, 5041185.0], [97.5, 5041185.0], [97.6, 5041222.0], [97.7, 5041222.0], [97.8, 5041222.0], [97.9, 5041229.0], [98.0, 5041229.0], [98.1, 5041229.0], [98.2, 5041229.0], [98.3, 5041241.0], [98.4, 5041241.0], [98.5, 5041241.0], [98.6, 5041255.0], [98.7, 5041255.0], [98.8, 5041255.0], [98.9, 5041255.0], [99.0, 5041307.0], [99.1, 5041307.0], [99.2, 5041307.0], [99.3, 5041321.0], [99.4, 5041321.0], [99.5, 5041321.0], [99.6, 5041321.0], [99.7, 5041401.0], [99.8, 5041401.0], [99.9, 5041401.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[0.0, 487.0], [0.1, 487.0], [0.2, 487.0], [0.3, 487.0], [0.4, 488.0], [0.5, 488.0], [0.6, 488.0], [0.7, 489.0], [0.8, 489.0], [0.9, 489.0], [1.0, 489.0], [1.1, 489.0], [1.2, 489.0], [1.3, 489.0], [1.4, 490.0], [1.5, 490.0], [1.6, 490.0], [1.7, 490.0], [1.8, 490.0], [1.9, 490.0], [2.0, 491.0], [2.1, 491.0], [2.2, 491.0], [2.3, 491.0], [2.4, 491.0], [2.5, 491.0], [2.6, 491.0], [2.7, 491.0], [2.8, 491.0], [2.9, 491.0], [3.0, 491.0], [3.1, 491.0], [3.2, 491.0], [3.3, 491.0], [3.4, 491.0], [3.5, 491.0], [3.6, 491.0], [3.7, 491.0], [3.8, 491.0], [3.9, 491.0], [4.0, 492.0], [4.1, 492.0], [4.2, 492.0], [4.3, 492.0], [4.4, 492.0], [4.5, 492.0], [4.6, 492.0], [4.7, 492.0], [4.8, 492.0], [4.9, 492.0], [5.0, 492.0], [5.1, 492.0], [5.2, 492.0], [5.3, 492.0], [5.4, 492.0], [5.5, 492.0], [5.6, 493.0], [5.7, 493.0], [5.8, 493.0], [5.9, 494.0], [6.0, 494.0], [6.1, 494.0], [6.2, 494.0], [6.3, 494.0], [6.4, 494.0], [6.5, 494.0], [6.6, 494.0], [6.7, 494.0], [6.8, 494.0], [6.9, 495.0], [7.0, 495.0], [7.1, 495.0], [7.2, 495.0], [7.3, 495.0], [7.4, 495.0], [7.5, 495.0], [7.6, 495.0], [7.7, 495.0], [7.8, 495.0], [7.9, 495.0], [8.0, 495.0], [8.1, 495.0], [8.2, 496.0], [8.3, 496.0], [8.4, 496.0], [8.5, 496.0], [8.6, 496.0], [8.7, 496.0], [8.8, 496.0], [8.9, 496.0], [9.0, 496.0], [9.1, 496.0], [9.2, 496.0], [9.3, 496.0], [9.4, 496.0], [9.5, 496.0], [9.6, 496.0], [9.7, 496.0], [9.8, 497.0], [9.9, 497.0], [10.0, 497.0], [10.1, 497.0], [10.2, 497.0], [10.3, 497.0], [10.4, 497.0], [10.5, 497.0], [10.6, 497.0], [10.7, 497.0], [10.8, 497.0], [10.9, 497.0], [11.0, 497.0], [11.1, 497.0], [11.2, 497.0], [11.3, 497.0], [11.4, 497.0], [11.5, 498.0], [11.6, 498.0], [11.7, 498.0], [11.8, 498.0], [11.9, 498.0], [12.0, 498.0], [12.1, 498.0], [12.2, 498.0], [12.3, 498.0], [12.4, 498.0], [12.5, 498.0], [12.6, 498.0], [12.7, 498.0], [12.8, 498.0], [12.9, 498.0], [13.0, 498.0], [13.1, 498.0], [13.2, 498.0], [13.3, 498.0], [13.4, 498.0], [13.5, 498.0], [13.6, 498.0], [13.7, 498.0], [13.8, 498.0], [13.9, 498.0], [14.0, 498.0], [14.1, 499.0], [14.2, 499.0], [14.3, 499.0], [14.4, 499.0], [14.5, 499.0], [14.6, 499.0], [14.7, 499.0], [14.8, 499.0], [14.9, 499.0], [15.0, 499.0], [15.1, 499.0], [15.2, 499.0], [15.3, 499.0], [15.4, 499.0], [15.5, 499.0], [15.6, 499.0], [15.7, 499.0], [15.8, 499.0], [15.9, 499.0], [16.0, 499.0], [16.1, 499.0], [16.2, 499.0], [16.3, 500.0], [16.4, 500.0], [16.5, 500.0], [16.6, 500.0], [16.7, 500.0], [16.8, 500.0], [16.9, 500.0], [17.0, 500.0], [17.1, 500.0], [17.2, 500.0], [17.3, 500.0], [17.4, 500.0], [17.5, 500.0], [17.6, 500.0], [17.7, 500.0], [17.8, 500.0], [17.9, 500.0], [18.0, 500.0], [18.1, 500.0], [18.2, 500.0], [18.3, 500.0], [18.4, 500.0], [18.5, 500.0], [18.6, 501.0], [18.7, 501.0], [18.8, 501.0], [18.9, 501.0], [19.0, 501.0], [19.1, 501.0], [19.2, 501.0], [19.3, 501.0], [19.4, 501.0], [19.5, 501.0], [19.6, 501.0], [19.7, 501.0], [19.8, 501.0], [19.9, 501.0], [20.0, 501.0], [20.1, 501.0], [20.2, 501.0], [20.3, 501.0], [20.4, 501.0], [20.5, 501.0], [20.6, 501.0], [20.7, 501.0], [20.8, 501.0], [20.9, 502.0], [21.0, 502.0], [21.1, 502.0], [21.2, 502.0], [21.3, 502.0], [21.4, 502.0], [21.5, 502.0], [21.6, 502.0], [21.7, 502.0], [21.8, 502.0], [21.9, 502.0], [22.0, 502.0], [22.1, 502.0], [22.2, 502.0], [22.3, 502.0], [22.4, 502.0], [22.5, 503.0], [22.6, 503.0], [22.7, 503.0], [22.8, 503.0], [22.9, 503.0], [23.0, 503.0], [23.1, 503.0], [23.2, 503.0], [23.3, 503.0], [23.4, 503.0], [23.5, 503.0], [23.6, 503.0], [23.7, 503.0], [23.8, 503.0], [23.9, 503.0], [24.0, 503.0], [24.1, 503.0], [24.2, 503.0], [24.3, 503.0], [24.4, 503.0], [24.5, 503.0], [24.6, 503.0], [24.7, 503.0], [24.8, 503.0], [24.9, 503.0], [25.0, 503.0], [25.1, 503.0], [25.2, 503.0], [25.3, 503.0], [25.4, 503.0], [25.5, 503.0], [25.6, 503.0], [25.7, 503.0], [25.8, 504.0], [25.9, 504.0], [26.0, 504.0], [26.1, 504.0], [26.2, 504.0], [26.3, 504.0], [26.4, 504.0], [26.5, 504.0], [26.6, 504.0], [26.7, 504.0], [26.8, 504.0], [26.9, 504.0], [27.0, 504.0], [27.1, 504.0], [27.2, 504.0], [27.3, 504.0], [27.4, 504.0], [27.5, 504.0], [27.6, 504.0], [27.7, 504.0], [27.8, 504.0], [27.9, 504.0], [28.0, 504.0], [28.1, 505.0], [28.2, 505.0], [28.3, 505.0], [28.4, 505.0], [28.5, 505.0], [28.6, 505.0], [28.7, 505.0], [28.8, 505.0], [28.9, 505.0], [29.0, 506.0], [29.1, 506.0], [29.2, 506.0], [29.3, 506.0], [29.4, 506.0], [29.5, 506.0], [29.6, 506.0], [29.7, 506.0], [29.8, 506.0], [29.9, 506.0], [30.0, 506.0], [30.1, 506.0], [30.2, 506.0], [30.3, 506.0], [30.4, 506.0], [30.5, 506.0], [30.6, 506.0], [30.7, 506.0], [30.8, 506.0], [30.9, 506.0], [31.0, 506.0], [31.1, 506.0], [31.2, 506.0], [31.3, 506.0], [31.4, 506.0], [31.5, 506.0], [31.6, 506.0], [31.7, 506.0], [31.8, 506.0], [31.9, 506.0], [32.0, 507.0], [32.1, 507.0], [32.2, 507.0], [32.3, 507.0], [32.4, 507.0], [32.5, 507.0], [32.6, 507.0], [32.7, 507.0], [32.8, 507.0], [32.9, 507.0], [33.0, 507.0], [33.1, 507.0], [33.2, 507.0], [33.3, 508.0], [33.4, 508.0], [33.5, 508.0], [33.6, 508.0], [33.7, 508.0], [33.8, 508.0], [33.9, 508.0], [34.0, 508.0], [34.1, 508.0], [34.2, 508.0], [34.3, 509.0], [34.4, 509.0], [34.5, 509.0], [34.6, 509.0], [34.7, 509.0], [34.8, 509.0], [34.9, 509.0], [35.0, 509.0], [35.1, 509.0], [35.2, 509.0], [35.3, 509.0], [35.4, 509.0], [35.5, 509.0], [35.6, 510.0], [35.7, 510.0], [35.8, 510.0], [35.9, 510.0], [36.0, 510.0], [36.1, 510.0], [36.2, 510.0], [36.3, 510.0], [36.4, 510.0], [36.5, 510.0], [36.6, 510.0], [36.7, 510.0], [36.8, 510.0], [36.9, 511.0], [37.0, 511.0], [37.1, 511.0], [37.2, 511.0], [37.3, 511.0], [37.4, 511.0], [37.5, 511.0], [37.6, 511.0], [37.7, 511.0], [37.8, 511.0], [37.9, 511.0], [38.0, 511.0], [38.1, 511.0], [38.2, 511.0], [38.3, 511.0], [38.4, 511.0], [38.5, 512.0], [38.6, 512.0], [38.7, 512.0], [38.8, 512.0], [38.9, 512.0], [39.0, 512.0], [39.1, 512.0], [39.2, 512.0], [39.3, 512.0], [39.4, 512.0], [39.5, 512.0], [39.6, 512.0], [39.7, 512.0], [39.8, 513.0], [39.9, 513.0], [40.0, 513.0], [40.1, 513.0], [40.2, 513.0], [40.3, 513.0], [40.4, 513.0], [40.5, 513.0], [40.6, 513.0], [40.7, 513.0], [40.8, 513.0], [40.9, 513.0], [41.0, 513.0], [41.1, 513.0], [41.2, 513.0], [41.3, 513.0], [41.4, 514.0], [41.5, 514.0], [41.6, 514.0], [41.7, 514.0], [41.8, 514.0], [41.9, 514.0], [42.0, 514.0], [42.1, 514.0], [42.2, 514.0], [42.3, 514.0], [42.4, 514.0], [42.5, 514.0], [42.6, 514.0], [42.7, 515.0], [42.8, 515.0], [42.9, 515.0], [43.0, 515.0], [43.1, 515.0], [43.2, 515.0], [43.3, 515.0], [43.4, 515.0], [43.5, 515.0], [43.6, 515.0], [43.7, 515.0], [43.8, 515.0], [43.9, 515.0], [44.0, 515.0], [44.1, 515.0], [44.2, 515.0], [44.3, 515.0], [44.4, 515.0], [44.5, 515.0], [44.6, 515.0], [44.7, 515.0], [44.8, 515.0], [44.9, 515.0], [45.0, 515.0], [45.1, 515.0], [45.2, 515.0], [45.3, 516.0], [45.4, 516.0], [45.5, 516.0], [45.6, 516.0], [45.7, 516.0], [45.8, 516.0], [45.9, 516.0], [46.0, 516.0], [46.1, 516.0], [46.2, 516.0], [46.3, 516.0], [46.4, 516.0], [46.5, 516.0], [46.6, 516.0], [46.7, 516.0], [46.8, 516.0], [46.9, 516.0], [47.0, 516.0], [47.1, 516.0], [47.2, 516.0], [47.3, 516.0], [47.4, 516.0], [47.5, 516.0], [47.6, 517.0], [47.7, 517.0], [47.8, 517.0], [47.9, 517.0], [48.0, 517.0], [48.1, 517.0], [48.2, 517.0], [48.3, 517.0], [48.4, 517.0], [48.5, 517.0], [48.6, 518.0], [48.7, 518.0], [48.8, 518.0], [48.9, 518.0], [49.0, 518.0], [49.1, 518.0], [49.2, 519.0], [49.3, 519.0], [49.4, 519.0], [49.5, 519.0], [49.6, 519.0], [49.7, 519.0], [49.8, 519.0], [49.9, 519.0], [50.0, 519.0], [50.1, 519.0], [50.2, 520.0], [50.3, 520.0], [50.4, 520.0], [50.5, 521.0], [50.6, 521.0], [50.7, 521.0], [50.8, 521.0], [50.9, 521.0], [51.0, 521.0], [51.1, 521.0], [51.2, 521.0], [51.3, 521.0], [51.4, 521.0], [51.5, 521.0], [51.6, 521.0], [51.7, 521.0], [51.8, 522.0], [51.9, 522.0], [52.0, 522.0], [52.1, 522.0], [52.2, 522.0], [52.3, 522.0], [52.4, 522.0], [52.5, 522.0], [52.6, 522.0], [52.7, 522.0], [52.8, 522.0], [52.9, 522.0], [53.0, 522.0], [53.1, 523.0], [53.2, 523.0], [53.3, 523.0], [53.4, 523.0], [53.5, 523.0], [53.6, 523.0], [53.7, 523.0], [53.8, 523.0], [53.9, 523.0], [54.0, 523.0], [54.1, 526.0], [54.2, 526.0], [54.3, 526.0], [54.4, 527.0], [54.5, 527.0], [54.6, 527.0], [54.7, 527.0], [54.8, 527.0], [54.9, 527.0], [55.0, 527.0], [55.1, 531.0], [55.2, 531.0], [55.3, 531.0], [55.4, 532.0], [55.5, 532.0], [55.6, 532.0], [55.7, 532.0], [55.8, 533.0], [55.9, 533.0], [56.0, 533.0], [56.1, 533.0], [56.2, 533.0], [56.3, 533.0], [56.4, 533.0], [56.5, 533.0], [56.6, 533.0], [56.7, 534.0], [56.8, 534.0], [56.9, 534.0], [57.0, 534.0], [57.1, 535.0], [57.2, 535.0], [57.3, 535.0], [57.4, 535.0], [57.5, 535.0], [57.6, 535.0], [57.7, 536.0], [57.8, 536.0], [57.9, 536.0], [58.0, 536.0], [58.1, 536.0], [58.2, 536.0], [58.3, 536.0], [58.4, 537.0], [58.5, 537.0], [58.6, 537.0], [58.7, 537.0], [58.8, 537.0], [58.9, 537.0], [59.0, 538.0], [59.1, 538.0], [59.2, 538.0], [59.3, 538.0], [59.4, 538.0], [59.5, 538.0], [59.6, 538.0], [59.7, 539.0], [59.8, 539.0], [59.9, 539.0], [60.0, 539.0], [60.1, 539.0], [60.2, 539.0], [60.3, 540.0], [60.4, 540.0], [60.5, 540.0], [60.6, 541.0], [60.7, 541.0], [60.8, 541.0], [60.9, 541.0], [61.0, 543.0], [61.1, 543.0], [61.2, 543.0], [61.3, 548.0], [61.4, 548.0], [61.5, 548.0], [61.6, 549.0], [61.7, 549.0], [61.8, 549.0], [61.9, 553.0], [62.0, 553.0], [62.1, 553.0], [62.2, 553.0], [62.3, 570.0], [62.4, 570.0], [62.5, 570.0], [62.6, 572.0], [62.7, 572.0], [62.8, 572.0], [62.9, 573.0], [63.0, 573.0], [63.1, 573.0], [63.2, 577.0], [63.3, 577.0], [63.4, 577.0], [63.5, 577.0], [63.6, 580.0], [63.7, 580.0], [63.8, 580.0], [63.9, 595.0], [64.0, 595.0], [64.1, 595.0], [64.2, 597.0], [64.3, 597.0], [64.4, 597.0], [64.5, 597.0], [64.6, 597.0], [64.7, 597.0], [64.8, 597.0], [64.9, 599.0], [65.0, 599.0], [65.1, 599.0], [65.2, 629.0], [65.3, 629.0], [65.4, 629.0], [65.5, 660.0], [65.6, 660.0], [65.7, 660.0], [65.8, 674.0], [65.9, 674.0], [66.0, 674.0], [66.1, 674.0], [66.2, 683.0], [66.3, 683.0], [66.4, 683.0], [66.5, 687.0], [66.6, 687.0], [66.7, 687.0], [66.8, 691.0], [66.9, 691.0], [67.0, 691.0], [67.1, 691.0], [67.2, 699.0], [67.3, 699.0], [67.4, 699.0], [67.5, 701.0], [67.6, 701.0], [67.7, 701.0], [67.8, 715.0], [67.9, 715.0], [68.0, 715.0], [68.1, 721.0], [68.2, 721.0], [68.3, 721.0], [68.4, 721.0], [68.5, 722.0], [68.6, 722.0], [68.7, 722.0], [68.8, 726.0], [68.9, 726.0], [69.0, 726.0], [69.1, 734.0], [69.2, 734.0], [69.3, 734.0], [69.4, 741.0], [69.5, 741.0], [69.6, 741.0], [69.7, 741.0], [69.8, 793.0], [69.9, 793.0], [70.0, 793.0], [70.1, 832.0], [70.2, 832.0], [70.3, 832.0], [70.4, 851.0], [70.5, 851.0], [70.6, 851.0], [70.7, 862.0], [70.8, 862.0], [70.9, 862.0], [71.0, 862.0], [71.1, 878.0], [71.2, 878.0], [71.3, 878.0], [71.4, 883.0], [71.5, 883.0], [71.6, 883.0], [71.7, 905.0], [71.8, 905.0], [71.9, 905.0], [72.0, 914.0], [72.1, 914.0], [72.2, 914.0], [72.3, 914.0], [72.4, 996.0], [72.5, 996.0], [72.6, 996.0], [72.7, 1007.0], [72.8, 1007.0], [72.9, 1007.0], [73.0, 1017.0], [73.1, 1017.0], [73.2, 1017.0], [73.3, 1017.0], [73.4, 1017.0], [73.5, 1017.0], [73.6, 1017.0], [73.7, 1022.0], [73.8, 1022.0], [73.9, 1022.0], [74.0, 1023.0], [74.1, 1023.0], [74.2, 1023.0], [74.3, 1028.0], [74.4, 1028.0], [74.5, 1028.0], [74.6, 1029.0], [74.7, 1029.0], [74.8, 1029.0], [74.9, 1029.0], [75.0, 1032.0], [75.1, 1032.0], [75.2, 1032.0], [75.3, 1035.0], [75.4, 1035.0], [75.5, 1035.0], [75.6, 1036.0], [75.7, 1036.0], [75.8, 1036.0], [75.9, 1037.0], [76.0, 1037.0], [76.1, 1037.0], [76.2, 1037.0], [76.3, 1037.0], [76.4, 1037.0], [76.5, 1037.0], [76.6, 1039.0], [76.7, 1039.0], [76.8, 1039.0], [76.9, 1039.0], [77.0, 1039.0], [77.1, 1039.0], [77.2, 1040.0], [77.3, 1040.0], [77.4, 1040.0], [77.5, 1040.0], [77.6, 1041.0], [77.7, 1041.0], [77.8, 1041.0], [77.9, 1043.0], [78.0, 1043.0], [78.1, 1043.0], [78.2, 1044.0], [78.3, 1044.0], [78.4, 1044.0], [78.5, 1044.0], [78.6, 1044.0], [78.7, 1044.0], [78.8, 1044.0], [78.9, 1045.0], [79.0, 1045.0], [79.1, 1045.0], [79.2, 1045.0], [79.3, 1045.0], [79.4, 1045.0], [79.5, 1045.0], [79.6, 1045.0], [79.7, 1045.0], [79.8, 1045.0], [79.9, 1046.0], [80.0, 1046.0], [80.1, 1046.0], [80.2, 1046.0], [80.3, 1046.0], [80.4, 1046.0], [80.5, 1046.0], [80.6, 1046.0], [80.7, 1046.0], [80.8, 1047.0], [80.9, 1047.0], [81.0, 1047.0], [81.1, 1047.0], [81.2, 1047.0], [81.3, 1047.0], [81.4, 1047.0], [81.5, 1047.0], [81.6, 1047.0], [81.7, 1047.0], [81.8, 1048.0], [81.9, 1048.0], [82.0, 1048.0], [82.1, 1049.0], [82.2, 1049.0], [82.3, 1049.0], [82.4, 1049.0], [82.5, 1049.0], [82.6, 1049.0], [82.7, 1049.0], [82.8, 1049.0], [82.9, 1049.0], [83.0, 1049.0], [83.1, 1051.0], [83.2, 1051.0], [83.3, 1051.0], [83.4, 1055.0], [83.5, 1055.0], [83.6, 1055.0], [83.7, 1055.0], [83.8, 1055.0], [83.9, 1055.0], [84.0, 1055.0], [84.1, 1055.0], [84.2, 1055.0], [84.3, 1055.0], [84.4, 1056.0], [84.5, 1056.0], [84.6, 1056.0], [84.7, 1058.0], [84.8, 1058.0], [84.9, 1058.0], [85.0, 1058.0], [85.1, 1059.0], [85.2, 1059.0], [85.3, 1059.0], [85.4, 1059.0], [85.5, 1059.0], [85.6, 1059.0], [85.7, 1060.0], [85.8, 1060.0], [85.9, 1060.0], [86.0, 1062.0], [86.1, 1062.0], [86.2, 1062.0], [86.3, 1062.0], [86.4, 1066.0], [86.5, 1066.0], [86.6, 1066.0], [86.7, 1067.0], [86.8, 1067.0], [86.9, 1067.0], [87.0, 1067.0], [87.1, 1067.0], [87.2, 1067.0], [87.3, 1067.0], [87.4, 1067.0], [87.5, 1067.0], [87.6, 1067.0], [87.7, 1071.0], [87.8, 1071.0], [87.9, 1071.0], [88.0, 1072.0], [88.1, 1072.0], [88.2, 1072.0], [88.3, 1072.0], [88.4, 1072.0], [88.5, 1072.0], [88.6, 1078.0], [88.7, 1078.0], [88.8, 1078.0], [88.9, 1078.0], [89.0, 1084.0], [89.1, 1084.0], [89.2, 1084.0], [89.3, 1084.0], [89.4, 1084.0], [89.5, 1084.0], [89.6, 1088.0], [89.7, 1088.0], [89.8, 1088.0], [89.9, 1088.0], [90.0, 1093.0], [90.1, 1093.0], [90.2, 1093.0], [90.3, 1095.0], [90.4, 1095.0], [90.5, 1095.0], [90.6, 1100.0], [90.7, 1100.0], [90.8, 1100.0], [90.9, 1104.0], [91.0, 1104.0], [91.1, 1104.0], [91.2, 1104.0], [91.3, 1137.0], [91.4, 1137.0], [91.5, 1137.0], [91.6, 1140.0], [91.7, 1140.0], [91.8, 1140.0], [91.9, 489267.0], [92.0, 489267.0], [92.1, 489267.0], [92.2, 497939.0], [92.3, 497939.0], [92.4, 497939.0], [92.5, 497939.0], [92.6, 513289.0], [92.7, 513289.0], [92.8, 513289.0], [92.9, 576488.0], [93.0, 576488.0], [93.1, 576488.0], [93.2, 576750.0], [93.3, 576750.0], [93.4, 576750.0], [93.5, 577274.0], [93.6, 577274.0], [93.7, 577274.0], [93.8, 577274.0], [93.9, 585305.0], [94.0, 585305.0], [94.1, 585305.0], [94.2, 632232.0], [94.3, 632232.0], [94.4, 632232.0], [94.5, 640656.0], [94.6, 640656.0], [94.7, 640656.0], [94.8, 641303.0], [94.9, 641303.0], [95.0, 641303.0], [95.1, 641303.0], [95.2, 4464584.0], [95.3, 4464584.0], [95.4, 4464584.0], [95.5, 4512345.0], [95.6, 4512345.0], [95.7, 4512345.0], [95.8, 5040777.0], [95.9, 5040777.0], [96.0, 5040777.0], [96.1, 5040852.0], [96.2, 5040852.0], [96.3, 5040852.0], [96.4, 5040852.0], [96.5, 5040859.0], [96.6, 5040859.0], [96.7, 5040859.0], [96.8, 5040880.0], [96.9, 5040880.0], [97.0, 5040880.0], [97.1, 5040936.0], [97.2, 5040936.0], [97.3, 5040936.0], [97.4, 5040948.0], [97.5, 5040948.0], [97.6, 5040948.0], [97.7, 5040948.0], [97.8, 5041021.0], [97.9, 5041021.0], [98.0, 5041021.0], [98.1, 5041023.0], [98.2, 5041023.0], [98.3, 5041023.0], [98.4, 5041099.0], [98.5, 5041099.0], [98.6, 5041099.0], [98.7, 5041110.0], [98.8, 5041110.0], [98.9, 5041110.0], [99.0, 5041110.0], [99.1, 5041157.0], [99.2, 5041157.0], [99.3, 5041157.0], [99.4, 5041186.0], [99.5, 5041186.0], [99.6, 5041186.0], [99.7, 5041383.0], [99.8, 5041383.0], [99.9, 5041383.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[0.0, 484.0], [0.1, 484.0], [0.2, 485.0], [0.3, 485.0], [0.4, 486.0], [0.5, 487.0], [0.6, 487.0], [0.7, 487.0], [0.8, 488.0], [0.9, 489.0], [1.0, 489.0], [1.1, 489.0], [1.2, 490.0], [1.3, 490.0], [1.4, 490.0], [1.5, 490.0], [1.6, 490.0], [1.7, 491.0], [1.8, 491.0], [1.9, 491.0], [2.0, 491.0], [2.1, 491.0], [2.2, 491.0], [2.3, 491.0], [2.4, 491.0], [2.5, 492.0], [2.6, 492.0], [2.7, 492.0], [2.8, 492.0], [2.9, 492.0], [3.0, 492.0], [3.1, 493.0], [3.2, 493.0], [3.3, 494.0], [3.4, 494.0], [3.5, 494.0], [3.6, 494.0], [3.7, 494.0], [3.8, 494.0], [3.9, 494.0], [4.0, 494.0], [4.1, 494.0], [4.2, 494.0], [4.3, 495.0], [4.4, 495.0], [4.5, 495.0], [4.6, 495.0], [4.7, 495.0], [4.8, 495.0], [4.9, 495.0], [5.0, 495.0], [5.1, 495.0], [5.2, 495.0], [5.3, 496.0], [5.4, 496.0], [5.5, 496.0], [5.6, 496.0], [5.7, 496.0], [5.8, 496.0], [5.9, 496.0], [6.0, 496.0], [6.1, 496.0], [6.2, 496.0], [6.3, 496.0], [6.4, 496.0], [6.5, 496.0], [6.6, 497.0], [6.7, 497.0], [6.8, 497.0], [6.9, 497.0], [7.0, 497.0], [7.1, 497.0], [7.2, 497.0], [7.3, 497.0], [7.4, 497.0], [7.5, 497.0], [7.6, 498.0], [7.7, 498.0], [7.8, 498.0], [7.9, 498.0], [8.0, 498.0], [8.1, 498.0], [8.2, 498.0], [8.3, 498.0], [8.4, 498.0], [8.5, 498.0], [8.6, 499.0], [8.7, 499.0], [8.8, 499.0], [8.9, 499.0], [9.0, 499.0], [9.1, 499.0], [9.2, 499.0], [9.3, 499.0], [9.4, 499.0], [9.5, 499.0], [9.6, 499.0], [9.7, 499.0], [9.8, 499.0], [9.9, 500.0], [10.0, 500.0], [10.1, 500.0], [10.2, 500.0], [10.3, 500.0], [10.4, 500.0], [10.5, 500.0], [10.6, 500.0], [10.7, 500.0], [10.8, 500.0], [10.9, 500.0], [11.0, 501.0], [11.1, 501.0], [11.2, 501.0], [11.3, 501.0], [11.4, 501.0], [11.5, 501.0], [11.6, 501.0], [11.7, 501.0], [11.8, 501.0], [11.9, 501.0], [12.0, 502.0], [12.1, 502.0], [12.2, 502.0], [12.3, 502.0], [12.4, 502.0], [12.5, 502.0], [12.6, 502.0], [12.7, 502.0], [12.8, 502.0], [12.9, 503.0], [13.0, 503.0], [13.1, 503.0], [13.2, 503.0], [13.3, 503.0], [13.4, 503.0], [13.5, 503.0], [13.6, 503.0], [13.7, 503.0], [13.8, 503.0], [13.9, 503.0], [14.0, 503.0], [14.1, 503.0], [14.2, 503.0], [14.3, 504.0], [14.4, 504.0], [14.5, 504.0], [14.6, 504.0], [14.7, 504.0], [14.8, 504.0], [14.9, 504.0], [15.0, 504.0], [15.1, 504.0], [15.2, 504.0], [15.3, 504.0], [15.4, 504.0], [15.5, 504.0], [15.6, 504.0], [15.7, 504.0], [15.8, 505.0], [15.9, 505.0], [16.0, 505.0], [16.1, 505.0], [16.2, 505.0], [16.3, 505.0], [16.4, 505.0], [16.5, 505.0], [16.6, 506.0], [16.7, 506.0], [16.8, 506.0], [16.9, 506.0], [17.0, 506.0], [17.1, 506.0], [17.2, 506.0], [17.3, 506.0], [17.4, 506.0], [17.5, 506.0], [17.6, 506.0], [17.7, 506.0], [17.8, 506.0], [17.9, 506.0], [18.0, 506.0], [18.1, 507.0], [18.2, 507.0], [18.3, 507.0], [18.4, 507.0], [18.5, 507.0], [18.6, 507.0], [18.7, 507.0], [18.8, 507.0], [18.9, 507.0], [19.0, 507.0], [19.1, 508.0], [19.2, 508.0], [19.3, 508.0], [19.4, 508.0], [19.5, 508.0], [19.6, 508.0], [19.7, 508.0], [19.8, 508.0], [19.9, 508.0], [20.0, 509.0], [20.1, 509.0], [20.2, 509.0], [20.3, 509.0], [20.4, 509.0], [20.5, 510.0], [20.6, 510.0], [20.7, 510.0], [20.8, 510.0], [20.9, 510.0], [21.0, 510.0], [21.1, 510.0], [21.2, 510.0], [21.3, 511.0], [21.4, 511.0], [21.5, 511.0], [21.6, 511.0], [21.7, 511.0], [21.8, 511.0], [21.9, 511.0], [22.0, 512.0], [22.1, 512.0], [22.2, 512.0], [22.3, 512.0], [22.4, 512.0], [22.5, 512.0], [22.6, 512.0], [22.7, 512.0], [22.8, 512.0], [22.9, 513.0], [23.0, 513.0], [23.1, 513.0], [23.2, 513.0], [23.3, 513.0], [23.4, 513.0], [23.5, 513.0], [23.6, 513.0], [23.7, 513.0], [23.8, 513.0], [23.9, 513.0], [24.0, 513.0], [24.1, 514.0], [24.2, 514.0], [24.3, 514.0], [24.4, 514.0], [24.5, 514.0], [24.6, 514.0], [24.7, 515.0], [24.8, 515.0], [24.9, 515.0], [25.0, 515.0], [25.1, 515.0], [25.2, 515.0], [25.3, 515.0], [25.4, 515.0], [25.5, 515.0], [25.6, 515.0], [25.7, 515.0], [25.8, 516.0], [25.9, 516.0], [26.0, 516.0], [26.1, 516.0], [26.2, 516.0], [26.3, 516.0], [26.4, 516.0], [26.5, 516.0], [26.6, 516.0], [26.7, 516.0], [26.8, 517.0], [26.9, 517.0], [27.0, 517.0], [27.1, 517.0], [27.2, 518.0], [27.3, 518.0], [27.4, 518.0], [27.5, 518.0], [27.6, 518.0], [27.7, 518.0], [27.8, 518.0], [27.9, 519.0], [28.0, 519.0], [28.1, 519.0], [28.2, 519.0], [28.3, 519.0], [28.4, 520.0], [28.5, 520.0], [28.6, 521.0], [28.7, 521.0], [28.8, 521.0], [28.9, 521.0], [29.0, 522.0], [29.1, 522.0], [29.2, 522.0], [29.3, 522.0], [29.4, 522.0], [29.5, 523.0], [29.6, 523.0], [29.7, 523.0], [29.8, 523.0], [29.9, 523.0], [30.0, 523.0], [30.1, 524.0], [30.2, 526.0], [30.3, 526.0], [30.4, 526.0], [30.5, 527.0], [30.6, 527.0], [30.7, 527.0], [30.8, 527.0], [30.9, 531.0], [31.0, 531.0], [31.1, 532.0], [31.2, 532.0], [31.3, 532.0], [31.4, 533.0], [31.5, 533.0], [31.6, 534.0], [31.7, 534.0], [31.8, 535.0], [31.9, 535.0], [32.0, 536.0], [32.1, 536.0], [32.2, 536.0], [32.3, 536.0], [32.4, 537.0], [32.5, 537.0], [32.6, 538.0], [32.7, 538.0], [32.8, 538.0], [32.9, 539.0], [33.0, 539.0], [33.1, 540.0], [33.2, 540.0], [33.3, 541.0], [33.4, 541.0], [33.5, 541.0], [33.6, 541.0], [33.7, 542.0], [33.8, 543.0], [33.9, 545.0], [34.0, 546.0], [34.1, 548.0], [34.2, 548.0], [34.3, 551.0], [34.4, 553.0], [34.5, 557.0], [34.6, 557.0], [34.7, 558.0], [34.8, 559.0], [34.9, 561.0], [35.0, 563.0], [35.1, 563.0], [35.2, 565.0], [35.3, 565.0], [35.4, 570.0], [35.5, 572.0], [35.6, 573.0], [35.7, 577.0], [35.8, 583.0], [35.9, 589.0], [36.0, 590.0], [36.1, 590.0], [36.2, 590.0], [36.3, 592.0], [36.4, 592.0], [36.5, 592.0], [36.6, 593.0], [36.7, 593.0], [36.8, 593.0], [36.9, 594.0], [37.0, 595.0], [37.1, 595.0], [37.2, 595.0], [37.3, 596.0], [37.4, 597.0], [37.5, 597.0], [37.6, 597.0], [37.7, 597.0], [37.8, 597.0], [37.9, 597.0], [38.0, 598.0], [38.1, 598.0], [38.2, 598.0], [38.3, 598.0], [38.4, 598.0], [38.5, 598.0], [38.6, 599.0], [38.7, 599.0], [38.8, 599.0], [38.9, 599.0], [39.0, 599.0], [39.1, 599.0], [39.2, 600.0], [39.3, 601.0], [39.4, 601.0], [39.5, 601.0], [39.6, 601.0], [39.7, 602.0], [39.8, 602.0], [39.9, 602.0], [40.0, 603.0], [40.1, 603.0], [40.2, 603.0], [40.3, 603.0], [40.4, 603.0], [40.5, 603.0], [40.6, 604.0], [40.7, 604.0], [40.8, 604.0], [40.9, 604.0], [41.0, 604.0], [41.1, 604.0], [41.2, 605.0], [41.3, 605.0], [41.4, 605.0], [41.5, 606.0], [41.6, 606.0], [41.7, 606.0], [41.8, 606.0], [41.9, 606.0], [42.0, 606.0], [42.1, 607.0], [42.2, 607.0], [42.3, 607.0], [42.4, 607.0], [42.5, 608.0], [42.6, 608.0], [42.7, 608.0], [42.8, 608.0], [42.9, 608.0], [43.0, 608.0], [43.1, 608.0], [43.2, 608.0], [43.3, 609.0], [43.4, 609.0], [43.5, 609.0], [43.6, 609.0], [43.7, 610.0], [43.8, 610.0], [43.9, 610.0], [44.0, 610.0], [44.1, 610.0], [44.2, 610.0], [44.3, 611.0], [44.4, 611.0], [44.5, 611.0], [44.6, 612.0], [44.7, 612.0], [44.8, 612.0], [44.9, 612.0], [45.0, 613.0], [45.1, 613.0], [45.2, 613.0], [45.3, 613.0], [45.4, 613.0], [45.5, 613.0], [45.6, 614.0], [45.7, 615.0], [45.8, 615.0], [45.9, 615.0], [46.0, 615.0], [46.1, 616.0], [46.2, 616.0], [46.3, 616.0], [46.4, 616.0], [46.5, 616.0], [46.6, 616.0], [46.7, 616.0], [46.8, 617.0], [46.9, 617.0], [47.0, 617.0], [47.1, 617.0], [47.2, 617.0], [47.3, 617.0], [47.4, 618.0], [47.5, 618.0], [47.6, 618.0], [47.7, 619.0], [47.8, 619.0], [47.9, 619.0], [48.0, 620.0], [48.1, 621.0], [48.2, 621.0], [48.3, 621.0], [48.4, 621.0], [48.5, 621.0], [48.6, 622.0], [48.7, 622.0], [48.8, 622.0], [48.9, 622.0], [49.0, 622.0], [49.1, 623.0], [49.2, 623.0], [49.3, 623.0], [49.4, 623.0], [49.5, 623.0], [49.6, 623.0], [49.7, 624.0], [49.8, 624.0], [49.9, 624.0], [50.0, 625.0], [50.1, 625.0], [50.2, 625.0], [50.3, 625.0], [50.4, 625.0], [50.5, 626.0], [50.6, 626.0], [50.7, 626.0], [50.8, 627.0], [50.9, 627.0], [51.0, 627.0], [51.1, 627.0], [51.2, 627.0], [51.3, 627.0], [51.4, 628.0], [51.5, 629.0], [51.6, 629.0], [51.7, 629.0], [51.8, 629.0], [51.9, 629.0], [52.0, 630.0], [52.1, 630.0], [52.2, 630.0], [52.3, 631.0], [52.4, 631.0], [52.5, 631.0], [52.6, 631.0], [52.7, 631.0], [52.8, 631.0], [52.9, 632.0], [53.0, 632.0], [53.1, 633.0], [53.2, 633.0], [53.3, 634.0], [53.4, 636.0], [53.5, 637.0], [53.6, 638.0], [53.7, 638.0], [53.8, 638.0], [53.9, 639.0], [54.0, 640.0], [54.1, 641.0], [54.2, 642.0], [54.3, 643.0], [54.4, 645.0], [54.5, 646.0], [54.6, 646.0], [54.7, 646.0], [54.8, 646.0], [54.9, 647.0], [55.0, 648.0], [55.1, 649.0], [55.2, 649.0], [55.3, 650.0], [55.4, 651.0], [55.5, 651.0], [55.6, 652.0], [55.7, 652.0], [55.8, 653.0], [55.9, 653.0], [56.0, 654.0], [56.1, 655.0], [56.2, 655.0], [56.3, 656.0], [56.4, 656.0], [56.5, 657.0], [56.6, 657.0], [56.7, 659.0], [56.8, 659.0], [56.9, 659.0], [57.0, 660.0], [57.1, 661.0], [57.2, 661.0], [57.3, 663.0], [57.4, 664.0], [57.5, 669.0], [57.6, 670.0], [57.7, 673.0], [57.8, 674.0], [57.9, 676.0], [58.0, 676.0], [58.1, 678.0], [58.2, 678.0], [58.3, 682.0], [58.4, 683.0], [58.5, 685.0], [58.6, 687.0], [58.7, 687.0], [58.8, 690.0], [58.9, 690.0], [59.0, 690.0], [59.1, 691.0], [59.2, 695.0], [59.3, 696.0], [59.4, 696.0], [59.5, 697.0], [59.6, 699.0], [59.7, 699.0], [59.8, 701.0], [59.9, 701.0], [60.0, 715.0], [60.1, 717.0], [60.2, 718.0], [60.3, 719.0], [60.4, 721.0], [60.5, 722.0], [60.6, 722.0], [60.7, 724.0], [60.8, 726.0], [60.9, 730.0], [61.0, 734.0], [61.1, 734.0], [61.2, 737.0], [61.3, 739.0], [61.4, 741.0], [61.5, 766.0], [61.6, 770.0], [61.7, 772.0], [61.8, 774.0], [61.9, 778.0], [62.0, 780.0], [62.1, 782.0], [62.2, 787.0], [62.3, 792.0], [62.4, 793.0], [62.5, 794.0], [62.6, 809.0], [62.7, 809.0], [62.8, 811.0], [62.9, 814.0], [63.0, 827.0], [63.1, 832.0], [63.2, 833.0], [63.3, 840.0], [63.4, 847.0], [63.5, 848.0], [63.6, 851.0], [63.7, 851.0], [63.8, 853.0], [63.9, 856.0], [64.0, 859.0], [64.1, 862.0], [64.2, 865.0], [64.3, 868.0], [64.4, 870.0], [64.5, 870.0], [64.6, 871.0], [64.7, 875.0], [64.8, 877.0], [64.9, 877.0], [65.0, 877.0], [65.1, 878.0], [65.2, 880.0], [65.3, 881.0], [65.4, 883.0], [65.5, 884.0], [65.6, 895.0], [65.7, 895.0], [65.8, 899.0], [65.9, 901.0], [66.0, 902.0], [66.1, 905.0], [66.2, 914.0], [66.3, 915.0], [66.4, 917.0], [66.5, 920.0], [66.6, 921.0], [66.7, 949.0], [66.8, 962.0], [66.9, 975.0], [67.0, 976.0], [67.1, 983.0], [67.2, 990.0], [67.3, 996.0], [67.4, 1000.0], [67.5, 1000.0], [67.6, 1001.0], [67.7, 1002.0], [67.8, 1003.0], [67.9, 1004.0], [68.0, 1005.0], [68.1, 1005.0], [68.2, 1007.0], [68.3, 1010.0], [68.4, 1015.0], [68.5, 1015.0], [68.6, 1017.0], [68.7, 1017.0], [68.8, 1017.0], [68.9, 1017.0], [69.0, 1019.0], [69.1, 1021.0], [69.2, 1021.0], [69.3, 1022.0], [69.4, 1022.0], [69.5, 1022.0], [69.6, 1023.0], [69.7, 1023.0], [69.8, 1024.0], [69.9, 1024.0], [70.0, 1024.0], [70.1, 1025.0], [70.2, 1027.0], [70.3, 1028.0], [70.4, 1028.0], [70.5, 1029.0], [70.6, 1029.0], [70.7, 1030.0], [70.8, 1031.0], [70.9, 1032.0], [71.0, 1032.0], [71.1, 1034.0], [71.2, 1035.0], [71.3, 1036.0], [71.4, 1037.0], [71.5, 1037.0], [71.6, 1038.0], [71.7, 1039.0], [71.8, 1039.0], [71.9, 1040.0], [72.0, 1041.0], [72.1, 1041.0], [72.2, 1041.0], [72.3, 1043.0], [72.4, 1043.0], [72.5, 1043.0], [72.6, 1044.0], [72.7, 1044.0], [72.8, 1044.0], [72.9, 1045.0], [73.0, 1045.0], [73.1, 1045.0], [73.2, 1045.0], [73.3, 1045.0], [73.4, 1045.0], [73.5, 1046.0], [73.6, 1046.0], [73.7, 1046.0], [73.8, 1046.0], [73.9, 1047.0], [74.0, 1047.0], [74.1, 1047.0], [74.2, 1047.0], [74.3, 1049.0], [74.4, 1049.0], [74.5, 1049.0], [74.6, 1049.0], [74.7, 1049.0], [74.8, 1049.0], [74.9, 1050.0], [75.0, 1051.0], [75.1, 1052.0], [75.2, 1053.0], [75.3, 1055.0], [75.4, 1055.0], [75.5, 1055.0], [75.6, 1055.0], [75.7, 1056.0], [75.8, 1058.0], [75.9, 1059.0], [76.0, 1059.0], [76.1, 1060.0], [76.2, 1062.0], [76.3, 1063.0], [76.4, 1063.0], [76.5, 1065.0], [76.6, 1066.0], [76.7, 1066.0], [76.8, 1067.0], [76.9, 1067.0], [77.0, 1067.0], [77.1, 1068.0], [77.2, 1071.0], [77.3, 1072.0], [77.4, 1072.0], [77.5, 1078.0], [77.6, 1078.0], [77.7, 1084.0], [77.8, 1084.0], [77.9, 1086.0], [78.0, 1087.0], [78.1, 1088.0], [78.2, 1088.0], [78.3, 1089.0], [78.4, 1089.0], [78.5, 1093.0], [78.6, 1095.0], [78.7, 1100.0], [78.8, 1101.0], [78.9, 1102.0], [79.0, 1104.0], [79.1, 1120.0], [79.2, 1137.0], [79.3, 1140.0], [79.4, 1141.0], [79.5, 1142.0], [79.6, 1143.0], [79.7, 1144.0], [79.8, 1146.0], [79.9, 1153.0], [80.0, 1160.0], [80.1, 1170.0], [80.2, 1173.0], [80.3, 1181.0], [80.4, 1184.0], [80.5, 1187.0], [80.6, 1214.0], [80.7, 1215.0], [80.8, 1226.0], [80.9, 1331.0], [81.0, 1333.0], [81.1, 1358.0], [81.2, 1371.0], [81.3, 1372.0], [81.4, 1374.0], [81.5, 1378.0], [81.6, 1382.0], [81.7, 1385.0], [81.8, 1386.0], [81.9, 1390.0], [82.0, 1390.0], [82.1, 1397.0], [82.2, 1398.0], [82.3, 1398.0], [82.4, 1399.0], [82.5, 1401.0], [82.6, 1402.0], [82.7, 1408.0], [82.8, 1408.0], [82.9, 1411.0], [83.0, 1413.0], [83.1, 1415.0], [83.2, 1418.0], [83.3, 1421.0], [83.4, 1422.0], [83.5, 1422.0], [83.6, 1431.0], [83.7, 1433.0], [83.8, 1529.0], [83.9, 1531.0], [84.0, 1532.0], [84.1, 1533.0], [84.2, 1552.0], [84.3, 1589.0], [84.4, 1606.0], [84.5, 1612.0], [84.6, 1613.0], [84.7, 1632.0], [84.8, 1842.0], [84.9, 480350.0], [85.0, 481555.0], [85.1, 489267.0], [85.2, 489635.0], [85.3, 497935.0], [85.4, 505547.0], [85.5, 513289.0], [85.6, 513611.0], [85.7, 528719.0], [85.8, 536842.0], [85.9, 536883.0], [86.0, 537268.0], [86.1, 544487.0], [86.2, 544922.0], [86.3, 545059.0], [86.4, 545383.0], [86.5, 545384.0], [86.6, 545710.0], [86.7, 553119.0], [86.8, 553132.0], [86.9, 553389.0], [87.0, 553758.0], [87.1, 560970.0], [87.2, 576365.0], [87.3, 576488.0], [87.4, 576531.0], [87.5, 576750.0], [87.6, 577021.0], [87.7, 577274.0], [87.8, 577636.0], [87.9, 585304.0], [88.0, 585471.0], [88.1, 585705.0], [88.2, 593482.0], [88.3, 601686.0], [88.4, 609400.0], [88.5, 616859.0], [88.6, 617765.0], [88.7, 624911.0], [88.8, 625323.0], [88.9, 625564.0], [89.0, 632232.0], [89.1, 633555.0], [89.2, 640656.0], [89.3, 641302.0], [89.4, 641319.0], [89.5, 649476.0], [89.6, 672959.0], [89.7, 673341.0], [89.8, 694312.0], [89.9, 4463608.0], [90.0, 4464969.0], [90.1, 4488117.0], [90.2, 4495928.0], [90.3, 4512343.0], [90.4, 4560490.0], [90.5, 4737392.0], [90.6, 4740832.0], [90.7, 4741278.0], [90.8, 4771824.0], [90.9, 4772855.0], [91.0, 4773377.0], [91.1, 4773807.0], [91.2, 4774362.0], [91.3, 4774904.0], [91.4, 4775330.0], [91.5, 4806864.0], [91.6, 4807305.0], [91.7, 4807816.0], [91.8, 4808317.0], [91.9, 4809372.0], [92.0, 4810380.0], [92.1, 4811323.0], [92.2, 4841885.0], [92.3, 4842382.0], [92.4, 4842810.0], [92.5, 4843871.0], [92.6, 4844302.0], [92.7, 4844816.0], [92.8, 4845876.0], [92.9, 4876906.0], [93.0, 4877365.0], [93.1, 4878405.0], [93.2, 4878891.0], [93.3, 4880833.0], [93.4, 4912381.0], [93.5, 4912882.0], [93.6, 4913907.0], [93.7, 4914371.0], [93.8, 4915327.0], [93.9, 4946885.0], [94.0, 4947367.0], [94.1, 4947881.0], [94.2, 4948358.0], [94.3, 4949389.0], [94.4, 4949841.0], [94.5, 4950801.0], [94.6, 4951316.0], [94.7, 4982402.0], [94.8, 4983354.0], [94.9, 4983893.0], [95.0, 4984403.0], [95.1, 4984900.0], [95.2, 4985387.0], [95.3, 4985838.0], [95.4, 4986311.0], [95.5, 5016822.0], [95.6, 5017319.0], [95.7, 5017848.0], [95.8, 5018828.0], [95.9, 5019389.0], [96.0, 5019490.0], [96.1, 5019500.0], [96.2, 5020844.0], [96.3, 5040699.0], [96.4, 5040777.0], [96.5, 5040852.0], [96.6, 5040859.0], [96.7, 5040880.0], [96.8, 5040902.0], [96.9, 5040903.0], [97.0, 5040930.0], [97.1, 5040936.0], [97.2, 5040991.0], [97.3, 5041021.0], [97.4, 5041023.0], [97.5, 5041040.0], [97.6, 5041058.0], [97.7, 5041088.0], [97.8, 5041092.0], [97.9, 5041099.0], [98.0, 5041099.0], [98.1, 5041108.0], [98.2, 5041110.0], [98.3, 5041122.0], [98.4, 5041157.0], [98.5, 5041162.0], [98.6, 5041185.0], [98.7, 5041207.0], [98.8, 5041222.0], [98.9, 5041229.0], [99.0, 5041241.0], [99.1, 5041255.0], [99.2, 5041305.0], [99.3, 5041307.0], [99.4, 5041321.0], [99.5, 5041347.0], [99.6, 5041383.0], [99.7, 5041401.0], [99.8, 5041555.0], [99.9, 5041861.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 314.0, "series": [{"data": [[536400.0, 1.0], [600.0, 205.0], [5041500.0, 1.0], [700.0, 12.0], [800.0, 5.0], [576500.0, 1.0], [5041000.0, 4.0], [625300.0, 1.0], [900.0, 5.0], [4560500.0, 1.0], [1000.0, 23.0], [4464900.0, 1.0], [1100.0, 14.0], [1200.0, 3.0], [593400.0, 1.0], [5040900.0, 2.0], [1300.0, 2.0], [4495900.0, 1.0], [1500.0, 5.0], [528700.0, 1.0], [1600.0, 1.0], [1800.0, 1.0], [5040700.0, 1.0], [489600.0, 1.0], [5041200.0, 1.0], [536800.0, 1.0], [5041800.0, 2.0], [5041300.0, 2.0], [4488100.0, 1.0], [500.0, 28.0]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[544400.0, 1.0], [5041100.0, 4.0], [600.0, 8.0], [700.0, 10.0], [800.0, 6.0], [585700.0, 1.0], [5041000.0, 1.0], [900.0, 2.0], [480300.0, 1.0], [4463600.0, 1.0], [5041400.0, 1.0], [1000.0, 43.0], [1100.0, 2.0], [577000.0, 1.0], [585400.0, 1.0], [5040900.0, 2.0], [5041300.0, 2.0], [553100.0, 2.0], [400.0, 55.0], [576300.0, 1.0], [500.0, 136.0], [5041200.0, 4.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[576400.0, 1.0], [577200.0, 1.0], [600.0, 7.0], [700.0, 8.0], [800.0, 5.0], [585300.0, 1.0], [5041000.0, 3.0], [641300.0, 1.0], [900.0, 3.0], [4464500.0, 1.0], [1000.0, 55.0], [1100.0, 4.0], [5040900.0, 2.0], [640600.0, 1.0], [576700.0, 1.0], [4512300.0, 1.0], [5040700.0, 1.0], [489200.0, 1.0], [513200.0, 1.0], [5041100.0, 3.0], [497900.0, 1.0], [632200.0, 1.0], [5041300.0, 1.0], [400.0, 50.0], [5040800.0, 3.0], [500.0, 150.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[544400.0, 1.0], [4841800.0, 1.0], [576400.0, 1.0], [4948300.0, 1.0], [5041500.0, 1.0], [545300.0, 2.0], [4776300.0, 1.0], [625300.0, 1.0], [641300.0, 2.0], [4947300.0, 1.0], [673300.0, 1.0], [4464900.0, 1.0], [4844800.0, 1.0], [4951300.0, 1.0], [4843800.0, 1.0], [4737300.0, 1.0], [617500.0, 1.0], [633500.0, 1.0], [694300.0, 1.0], [489600.0, 1.0], [4842800.0, 1.0], [513600.0, 1.0], [4949300.0, 1.0], [601600.0, 1.0], [5040600.0, 1.0], [4985300.0, 1.0], [4878800.0, 1.0], [544900.0, 1.0], [560900.0, 1.0], [624900.0, 1.0], [672900.0, 1.0], [632200.0, 1.0], [4775300.0, 1.0], [4774300.0, 1.0], [553100.0, 2.0], [4880800.0, 1.0], [4986300.0, 1.0], [4773300.0, 1.0], [577200.0, 1.0], [4984900.0, 1.0], [4878400.0, 1.0], [4741200.0, 1.0], [4915300.0, 1.0], [4807800.0, 1.0], [4914300.0, 1.0], [585400.0, 1.0], [649400.0, 1.0], [528700.0, 1.0], [576700.0, 1.0], [5041200.0, 5.0], [5017800.0, 1.0], [545700.0, 1.0], [4845800.0, 1.0], [5016800.0, 1.0], [481500.0, 1.0], [5041400.0, 1.0], [505500.0, 1.0], [5020800.0, 1.0], [5041300.0, 5.0], [4806800.0, 1.0], [400.0, 105.0], [576300.0, 1.0], [4912300.0, 1.0], [500.0, 314.0], [5018800.0, 1.0], [536400.0, 1.0], [600.0, 220.0], [4948800.0, 1.0], [4947800.0, 1.0], [700.0, 30.0], [553300.0, 1.0], [5019500.0, 1.0], [800.0, 36.0], [585300.0, 1.0], [5041000.0, 8.0], [900.0, 16.0], [4464500.0, 1.0], [4946800.0, 1.0], [1000.0, 121.0], [1100.0, 20.0], [4844300.0, 1.0], [5019400.0, 1.0], [1200.0, 3.0], [5040900.0, 6.0], [640600.0, 1.0], [1300.0, 17.0], [1400.0, 14.0], [4950800.0, 1.0], [1500.0, 7.0], [4949800.0, 1.0], [1600.0, 4.0], [625500.0, 1.0], [1800.0, 1.0], [4842300.0, 1.0], [5041100.0, 7.0], [577600.0, 1.0], [4985800.0, 1.0], [4772800.0, 1.0], [4771800.0, 1.0], [480300.0, 1.0], [4463600.0, 1.0], [4983800.0, 1.0], [497900.0, 1.0], [4877300.0, 1.0], [4774900.0, 1.0], [4773800.0, 1.0], [4488100.0, 1.0], [537200.0, 1.0], [569200.0, 1.0], [5018200.0, 1.0], [4809300.0, 1.0], [4984400.0, 1.0], [576500.0, 1.0], [4808300.0, 1.0], [4876900.0, 1.0], [593400.0, 1.0], [609400.0, 1.0], [4983300.0, 1.0], [4560400.0, 1.0], [4495900.0, 1.0], [4512300.0, 1.0], [4811300.0, 1.0], [5040700.0, 1.0], [489200.0, 1.0], [4810300.0, 1.0], [513200.0, 1.0], [536800.0, 2.0], [616800.0, 1.0], [4740800.0, 1.0], [4846300.0, 1.0], [5017300.0, 1.0], [553700.0, 1.0], [585700.0, 1.0], [4913900.0, 1.0], [617700.0, 1.0], [545000.0, 1.0], [577000.0, 1.0], [5041800.0, 2.0], [4807300.0, 1.0], [4982400.0, 1.0], [4912800.0, 1.0], [5019300.0, 1.0], [5040800.0, 3.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5041800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 779.0, "series": [{"data": [[0.0, 117.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 779.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 12.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 222.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.720279720279734, "minX": 1.71781866E12, "maxY": 100.0, "series": [{"data": [[1.71781944E12, 82.5], [1.71781962E12, 71.0], [1.71781932E12, 92.5], [1.7178195E12, 77.5], [1.7178192E12, 99.0], [1.71781938E12, 88.0], [1.71781956E12, 74.0], [1.71781866E12, 9.720279720279734], [1.71781914E12, 100.0], [1.71781926E12, 96.83333333333334], [1.7178237E12, 50.407894736842096]], "isOverall": false, "label": "Payouts_Skalability Test", "isController": false}, {"data": [[1.71781932E12, 46.5], [1.7178198E12, 41.0], [1.7178192E12, 50.0], [1.71781968E12, 45.0], [1.71781866E12, 44.93469387755107], [1.71781914E12, 50.0], [1.71781926E12, 49.62499999999999], [1.71781974E12, 43.0], [1.7178237E12, 38.575]], "isOverall": false, "label": "Payouts_Load Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7178237E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 493.5, "minX": 13.0, "maxY": 5041763.0, "series": [{"data": [[32.0, 617.0], [33.0, 1187.0], [34.0, 651.75], [35.0, 1173.0], [36.0, 646.0], [37.0, 609.0], [38.0, 905.1666666666667], [39.0, 867.0], [40.0, 610.5], [41.0, 735.3333333333334], [43.0, 670.0], [42.0, 5041763.0], [44.0, 748.7500000000001], [45.0, 610.6666666666666], [46.0, 598.0], [47.0, 868.25], [48.0, 786.6666666666666], [49.0, 831.2], [50.0, 994.0], [51.0, 758.8333333333333], [52.0, 627.25], [53.0, 673.0], [54.0, 745.6666666666666], [55.0, 702.75], [56.0, 884.3333333333334], [57.0, 642.6], [58.0, 799.0], [59.0, 674.6666666666666], [60.0, 713.1978609625669], [107.0, 4907573.666666667], [109.0, 4764715.5], [113.0, 489636.0], [112.0, 536883.0], [143.0, 625323.0], [149.0, 528719.0], [148.0, 556494.0], [146.0, 593483.0], [17.0, 652.3333333333334], [18.0, 627.0], [19.0, 633.0], [20.0, 717.0], [21.0, 1144.0], [23.0, 610.0], [24.0, 615.0], [25.0, 630.0], [27.0, 652.0], [28.0, 620.0], [30.0, 795.3333333333334]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[57.73475609756096, 267235.2896341464]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout-Aggregated", "isController": true}, {"data": [[32.0, 1052.0], [34.0, 849.6666666666666], [35.0, 1078.0], [36.0, 923.6666666666666], [37.0, 1041.0], [39.0, 594.0], [40.0, 518.5], [41.0, 1045.6666666666667], [42.0, 2016909.2], [43.0, 1260735.0], [44.0, 842.625], [45.0, 496.0], [47.0, 516.0], [48.0, 746.8], [49.0, 514.25], [50.0, 636.0], [51.0, 781.75], [52.0, 925.0], [53.0, 499.0], [54.0, 567.3333333333334], [55.0, 741.5714285714286], [56.0, 615.8], [57.0, 556.2], [58.0, 544.0], [59.0, 853.7142857142858], [60.0, 583.8908045977015], [107.0, 4976981.555555556], [111.0, 585708.0], [110.0, 585471.0], [109.0, 5041107.0], [150.0, 480350.0], [148.0, 556775.75], [147.0, 577021.0], [27.0, 516.0], [28.0, 518.0], [30.0, 493.5]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[60.305263157894686, 279510.8140350877]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails-Aggregated", "isController": true}, {"data": [[32.0, 1072.0], [35.0, 1084.0], [36.0, 930.5], [38.0, 773.5], [39.0, 878.0], [40.0, 495.0], [41.0, 712.0], [42.0, 612.0], [43.0, 1042.5], [44.0, 1681041.0], [45.0, 1048.6666666666667], [46.0, 626.0], [47.0, 653.375], [48.0, 718.0], [49.0, 507.0], [50.0, 903.4], [51.0, 510.5], [52.0, 715.6666666666666], [53.0, 700.3333333333333], [54.0, 604.5], [55.0, 715.625], [56.0, 552.5], [57.0, 514.0], [58.0, 720.0], [59.0, 727.5], [60.0, 577.8435754189941], [107.0, 4974941.625], [109.0, 4944934.0], [114.0, 497939.0], [142.0, 632232.0], [140.0, 640656.0], [139.0, 641303.0], [150.0, 489267.0], [149.0, 513289.0], [148.0, 576488.0], [147.0, 579776.3333333334], [24.0, 1059.5], [25.0, 1028.0], [26.0, 1079.5], [27.0, 1065.5], [28.0, 1037.0], [30.0, 1047.0], [31.0, 766.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[60.14006514657981, 261964.7654723127]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails-Aggregated", "isController": true}, {"data": [[13.0, 1379.25], [14.0, 1255.25], [17.0, 652.3333333333334], [18.0, 888.5], [19.0, 1009.0], [20.0, 1047.0], [21.0, 1144.0], [22.0, 1408.0], [23.0, 696.6666666666666], [24.0, 1008.4], [25.0, 1117.75], [26.0, 1079.5], [27.0, 931.4], [28.0, 774.0], [29.0, 1408.0], [30.0, 781.0000000000001], [31.0, 980.0], [32.0, 999.8], [33.0, 1282.5], [34.0, 736.5714285714287], [35.0, 1168.5], [36.0, 891.0909090909091], [37.0, 835.3333333333334], [38.0, 980.0999999999999], [39.0, 849.75], [40.0, 578.375], [41.0, 958.6666666666667], [42.0, 4214834.040816326], [43.0, 720813.5714285714], [44.0, 266097.5789473684], [45.0, 792.8333333333334], [46.0, 535256.3333333334], [47.0, 730.1176470588235], [48.0, 757.9999999999999], [49.0, 672.0], [50.0, 310152.125], [51.0, 725.0833333333333], [52.0, 821.0], [53.0, 677.2352941176472], [54.0, 720.5833333333334], [55.0, 756.1999999999999], [56.0, 703.4545454545454], [57.0, 628.2666666666668], [58.0, 716.4], [59.0, 764.1999999999999], [60.0, 631.5402930402926], [107.0, 4926842.568627452], [111.0, 585705.0], [110.0, 585471.0], [109.0, 4902890.749999999], [115.0, 673341.0], [114.0, 497935.0], [113.0, 489635.0], [112.0, 536883.0], [119.0, 633555.0], [118.0, 625564.0], [117.0, 649476.0], [116.0, 672959.0], [123.0, 616859.0], [122.0, 545383.0], [121.0, 569225.0], [120.0, 694312.0], [127.0, 617765.0], [126.0, 617502.0], [125.0, 537268.0], [124.0, 545710.0], [135.0, 560970.0], [134.0, 505547.0], [133.0, 577636.0], [132.0, 553389.0], [131.0, 624911.0], [130.0, 601686.0], [129.0, 641319.0], [128.0, 545059.0], [143.0, 625323.0], [142.0, 632232.0], [141.0, 544922.0], [140.0, 640656.0], [139.0, 641302.0], [138.0, 609400.0], [137.0, 545384.0], [136.0, 553758.0], [150.0, 484808.5], [149.0, 518539.6666666667], [148.0, 559511.2857142858], [147.0, 579087.25], [146.0, 593482.0], [145.0, 536842.0], [144.0, 481555.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[60.31308411214956, 530444.7785046732]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.71781866E12, "maxY": 24733.733333333334, "series": [{"data": [[1.71781944E12, 72.98333333333333], [1.7178198E12, 24.266666666666666], [1.7178195E12, 48.71666666666667], [1.71781968E12, 24.3], [1.71781938E12, 60.95], [1.71781866E12, 24733.733333333334], [1.71781974E12, 72.9], [1.71781962E12, 66.1], [1.71781932E12, 97.3], [1.7178192E12, 72.9], [1.71781956E12, 46.4], [1.71781914E12, 48.766666666666666], [1.71781926E12, 206.63333333333333], [1.7178237E12, 8058.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71781944E12, 47.9], [1.7178198E12, 10.433333333333334], [1.7178195E12, 31.933333333333334], [1.71781968E12, 11.266666666666667], [1.71781938E12, 39.916666666666664], [1.71781866E12, 7176.133333333333], [1.71781974E12, 58.63333333333333], [1.71781962E12, 0.0], [1.71781932E12, 55.333333333333336], [1.7178192E12, 47.93333333333333], [1.71781956E12, 15.966666666666667], [1.71781914E12, 22.833333333333332], [1.71781926E12, 133.58333333333334], [1.7178237E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7178237E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 629.301526717557, "minX": 1.71781866E12, "maxY": 5002670.133333333, "series": [{"data": [[1.7178192E12, 532588.0], [1.71781866E12, 725.4572368421047], [1.71781926E12, 598445.6666666666], [1.71781974E12, 513259.5], [1.7178237E12, 4914447.294117647]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[1.7178198E12, 585471.0], [1.7178192E12, 550246.0], [1.71781866E12, 629.301526717557], [1.71781914E12, 480350.0], [1.71781926E12, 576693.0], [1.71781974E12, 585708.0], [1.7178237E12, 5002670.133333333]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[1.71781932E12, 640979.5], [1.71781968E12, 497939.0], [1.71781866E12, 647.2340425531917], [1.71781914E12, 501278.0], [1.71781926E12, 589609.8], [1.7178237E12, 4967344.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[1.71781944E12, 593433.1666666666], [1.7178198E12, 585471.0], [1.7178195E12, 569294.25], [1.71781968E12, 497935.0], [1.71781938E12, 564490.6], [1.71781866E12, 704.1640969162994], [1.71781974E12, 537407.6666666666], [1.71781962E12, 665258.6666666666], [1.71781932E12, 589237.0], [1.7178192E12, 538254.1666666666], [1.71781956E12, 651143.6666666666], [1.71781914E12, 494302.0], [1.71781926E12, 576263.9166666667], [1.7178237E12, 4921728.871559634]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7178237E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71781866E12, "maxY": 317176.6666666667, "series": [{"data": [[1.7178192E12, 0.0], [1.71781866E12, 0.0], [1.71781926E12, 0.0], [1.71781974E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[1.7178198E12, 0.0], [1.7178192E12, 0.0], [1.71781866E12, 0.0], [1.71781914E12, 0.0], [1.71781926E12, 0.0], [1.71781974E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[1.71781932E12, 0.0], [1.71781968E12, 0.0], [1.71781866E12, 0.0], [1.71781914E12, 0.0], [1.71781926E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[1.71781944E12, 223541.83333333334], [1.7178198E12, 220354.0], [1.7178195E12, 214193.25], [1.71781968E12, 187858.0], [1.71781938E12, 212431.8], [1.71781866E12, 704.1629955947144], [1.71781974E12, 202367.66666666666], [1.71781962E12, 317176.6666666667], [1.71781932E12, 221586.8333333333], [1.7178192E12, 202340.0], [1.71781956E12, 257488.66666666666], [1.71781914E12, 186085.66666666666], [1.71781926E12, 216632.66666666666], [1.7178237E12, 2071.311926605505]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7178237E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71781866E12, "maxY": 1392.0, "series": [{"data": [[1.7178192E12, 0.0], [1.71781866E12, 51.43421052631583], [1.71781926E12, 0.0], [1.71781974E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout", "isController": true}, {"data": [[1.7178198E12, 0.0], [1.7178192E12, 0.0], [1.71781866E12, 0.0], [1.71781914E12, 0.0], [1.71781926E12, 0.0], [1.71781974E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails", "isController": true}, {"data": [[1.71781932E12, 0.0], [1.71781968E12, 0.0], [1.71781866E12, 0.0], [1.71781914E12, 0.0], [1.71781926E12, 0.0], [1.7178237E12, 0.0]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails", "isController": true}, {"data": [[1.71781944E12, 394.6666666666667], [1.7178198E12, 384.0], [1.7178195E12, 416.0], [1.71781968E12, 1392.0], [1.71781938E12, 404.0], [1.71781866E12, 44.21585903083694], [1.71781974E12, 461.3333333333333], [1.71781962E12, 412.6666666666667], [1.71781932E12, 286.8333333333333], [1.7178192E12, 67.66666666666666], [1.71781956E12, 413.0], [1.71781914E12, 0.0], [1.71781926E12, 102.58333333333333], [1.7178237E12, 303.63302752293555]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7178237E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 484.0, "minX": 1.71781866E12, "maxY": 1842.0, "series": [{"data": [[1.71781866E12, 1842.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71781866E12, 484.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71781866E12, 1063.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71781866E12, 1532.9099999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71781866E12, 607.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71781866E12, 1214.55]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71781866E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 516.5, "minX": 1.0, "maxY": 5040738.5, "series": [{"data": [[8.0, 1394.0], [48.0, 726.0], [53.0, 659.0], [62.0, 610.0], [16.0, 709.0], [74.0, 623.5], [80.0, 618.0], [90.0, 611.5], [99.0, 532.0], [98.0, 523.5], [96.0, 540.0], [102.0, 516.5], [26.0, 1032.0], [28.0, 625.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 553573.5], [2.0, 585588.0], [156.0, 5040738.5], [6.0, 576509.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 156.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 216431.0, "series": [{"data": [[8.0, 1394.0], [48.0, 726.0], [53.0, 659.0], [62.0, 610.0], [16.0, 709.0], [74.0, 623.5], [80.0, 618.0], [90.0, 611.5], [99.0, 532.0], [98.0, 523.5], [96.0, 540.0], [102.0, 516.5], [26.0, 1032.0], [28.0, 625.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 208343.5], [2.0, 184460.5], [156.0, 0.0], [6.0, 216431.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 156.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.71781866E12, "maxY": 17.1, "series": [{"data": [[1.71781878E12, 0.16666666666666666], [1.7178189E12, 0.3333333333333333], [1.71781872E12, 0.3333333333333333], [1.7178192E12, 0.16666666666666666], [1.71781884E12, 0.3333333333333333], [1.71781866E12, 17.1], [1.71781914E12, 0.06666666666666667], [1.71781926E12, 0.16666666666666666], [1.71781896E12, 0.16666666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71781926E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71781866E12, "maxY": 10.066666666666666, "series": [{"data": [[1.71781866E12, 10.066666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71781866E12, 5.066666666666666]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.7178237E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.71781944E12, 0.1], [1.71781932E12, 0.13333333333333333], [1.7178198E12, 0.03333333333333333], [1.7178195E12, 0.06666666666666667], [1.7178192E12, 0.1], [1.71781968E12, 0.03333333333333333], [1.71781938E12, 0.08333333333333333], [1.71781956E12, 0.03333333333333333], [1.71781914E12, 0.06666666666666667], [1.71781926E12, 0.2833333333333333], [1.71781974E12, 0.1]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.71781962E12, 0.05], [1.71781956E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.7178237E12, 2.533333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7178237E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71781866E12, "maxY": 15.133333333333333, "series": [{"data": [[1.71781932E12, 0.03333333333333333], [1.71781968E12, 0.016666666666666666], [1.71781914E12, 0.03333333333333333], [1.71781926E12, 0.08333333333333333], [1.7178237E12, 0.25]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails-failure", "isController": false}, {"data": [[1.7178192E12, 0.03333333333333333], [1.71781926E12, 0.05], [1.71781974E12, 0.03333333333333333], [1.7178237E12, 0.2833333333333333]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout-failure", "isController": true}, {"data": [[1.71781866E12, 15.133333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.7178198E12, 0.016666666666666666], [1.7178192E12, 0.05], [1.71781914E12, 0.016666666666666666], [1.71781926E12, 0.03333333333333333], [1.71781974E12, 0.016666666666666666], [1.7178237E12, 0.25]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails-failure", "isController": true}, {"data": [[1.71781944E12, 0.1], [1.7178198E12, 0.016666666666666666], [1.7178195E12, 0.06666666666666667], [1.71781968E12, 0.016666666666666666], [1.71781938E12, 0.08333333333333333], [1.71781974E12, 0.05], [1.71781962E12, 0.05], [1.71781932E12, 0.1], [1.7178192E12, 0.1], [1.71781956E12, 0.05], [1.71781914E12, 0.05], [1.71781926E12, 0.2], [1.7178237E12, 1.8166666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.71781866E12, 4.366666666666666]], "isOverall": false, "label": "Payouts_tr_ShowPayoutItemsDetails-success", "isController": true}, {"data": [[1.71781866E12, 5.066666666666666]], "isOverall": false, "label": "Payouts_tr_CreateBatchPayout-success", "isController": true}, {"data": [[1.71781866E12, 4.7]], "isOverall": false, "label": "Payouts_tr_ShowPayoutBatchDetails-success", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7178237E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71781866E12, "maxY": 29.266666666666666, "series": [{"data": [[1.71781866E12, 29.266666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71781944E12, 0.1], [1.7178198E12, 0.03333333333333333], [1.7178195E12, 0.06666666666666667], [1.71781968E12, 0.03333333333333333], [1.71781938E12, 0.08333333333333333], [1.71781974E12, 0.1], [1.71781962E12, 0.05], [1.71781932E12, 0.13333333333333333], [1.7178192E12, 0.18333333333333332], [1.71781956E12, 0.05], [1.71781914E12, 0.1], [1.71781926E12, 0.36666666666666664], [1.7178237E12, 2.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7178237E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

